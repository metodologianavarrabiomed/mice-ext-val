[{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"Required Libraries","title":"Example Of Use With Dichotomous Outcome","text":"following code snippet lists libraries needed run report. MiceExtVal package designed facilitate external validation prediction models, particularly clinical research settings. vignette, illustrate use replicating well-known example Steyerberg (2019), presented Chapter 20 book. Specifically, demonstrate externally validate TIMI-II model, originally developed Mueller et al. (1992), using data Western region cohort GUSTO-trial. dataset included package MiceExtVal::gusto. TIMI-II model logistic regression model predicts 42-day mortality patients acute myocardial infarction. aim assess model’s performance new population—patients GUSTO-Western region cohort, provides 30 days follow-. example, users learn MiceExtVal package supports evaluation model transportability predictive accuracy across different clinical settings. Table 1: TIMI-II coefficients","code":"library(MiceExtVal) library(gtsummary) library(dplyr) library(kableExtra)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"explore-the-dataset","dir":"Articles","previous_headings":"","what":"Explore the dataset","title":"Example Of Use With Dichotomous Outcome","text":"first step data analysis validation project become familiar dataset. MiceExtVal package includes GUSTO-Western region dataset, also used example Steyerberg (2019). illustrate use multiple imputation — key requirement package — provide modified version dataset artificially introduced missing values. setup allows users work realistic example incomplete data must addressed. Table 2 presents descriptive summary dataset. Notably, cohort includes nearly three times many men women. variables appear similar across sexes, marked difference mortality rates: \\(11\\%\\) women compared \\(4.7\\%\\) men. disparity may partially explained age, \\(57\\%\\) female patients \\(65\\) years old, compared \\(32\\%\\) male patients. previously mentioned, missing values distributed across variables similar pattern, need handled appropriately validation process. Table 2: GUSTO-W region dataset descriptive table","code":"gusto <- MiceExtVal::gusto |> dplyr::mutate(id = dplyr::row_number())  gusto |>   dplyr::mutate(     sex = dplyr::case_when(       sex == 0 ~ \"Male\", sex == 1 ~ \"Female\",       .default = as.character(sex)     )   ) |>   dplyr::select(-id) |>   gtsummary::tbl_summary(     by = \"sex\",     missing_text = \"% of missings\",     missing_stat = \"{p_miss}%\"   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"handling-missing-data","dir":"Articles","previous_headings":"","what":"Handling Missing Data","title":"Example Of Use With Dichotomous Outcome","text":"Although main objective vignette demonstrate use MiceExtVal package external model validation, addressing missing data necessary step—one reflects best practices clinical research. Multiple imputation widely recommended statistically sound method handling missing values, preserves power reduces bias compared simpler approaches like complete case analysis, Buuren (2018). MiceExtVal package built integrate seamlessly workflows use multiple imputation. fact, core functions expect input data provided long format, produced mice package van Buuren & Groothuis-Oudshoorn (2011). , present basic example using mice perform multiple imputation. first construct predictor matrix, excluding id variable, extract imputed datasets long format. resulting object, gusto_imp, contains multiply imputed datasets stacked long format. structure required proper functioning MiceExtVal package. comprehensive discussion multiple imputation methodology practical application, refer readers Flexible Imputation Missing Data Buuren (2018), original mice package paper van Buuren & Groothuis-Oudshoorn (2011).","code":"pred_matrix <- mice::make.predictorMatrix(gusto) pred_matrix[, \"id\"] <- 0 gusto_imp <- mice::mice(gusto, predictorMatrix = pred_matrix, seed = 123) |>   mice::complete(\"long\")"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"external-validation","dir":"Articles","previous_headings":"","what":"External Validation","title":"Example Of Use With Dichotomous Outcome","text":"Traditional external validation typically performed single, complete dataset involves several sequential steps. First, original model used generate predictions new dataset. , model’s performance evaluated assessing discrimination (e.g., AUC) calibration. necessary, model may recalibrated, performance metrics re-evaluated adjustment. However, working datasets containing missing values—especially clinical research—multiple imputation often used preserve data integrity avoid bias. result, longer single dataset, multiple imputed versions original data, representing plausible completion. complicates traditional validation workflows, since imputed dataset yields different results must pooled appropriately. MiceExtVal package designed bridge gap streamlining external validation process across multiple imputed datasets. allows users perform validation steps—including prediction, performance evaluation, optional recalibration properly handling variability introduced imputation. completed imputation previous section, now ready externally validate TIMI-II model using MiceExtVal. Since TIMI-II logistic regression model, begin defining MiceExtVal::mv_model_logreg() function. function requires formula specifying model’s coefficients intercept. essential variables included formula present imputed dataset; otherwise, subsequent functions raise error. model defined using MiceExtVal::mv_model_logreg(), resulting object—stored timi2_model—contains model formula structural skeleton needed subsequent steps. functions MiceExtVal package take model object input return updated version additional components, predictions performance metrics. functions follow consistent naming convention: modify model object begin prefix calculate_. first step external validation process compute model’s original predictions external dataset. , package provides MiceExtVal::calculate_predictions() function. function requires two arguments: model object (e.g., timi2_model) imputed dataset long format (e.g., gusto_imp). returns model object predicted probabilities added, ready subsequent validation steps. executing MiceExtVal::calculate_predictions(), model object updated additional information derived imputed dataset. Specifically, predicted probabilities computed imputation stored within model. addition, function calculates aggregated predictions patient pooling results across imputations. example values shown Table 3. Beyond predicted probabilities, model object also includes linear predictors (\\(\\beta \\cdot X\\)), individual imputation level pooled estimates. represent raw score logistic regression model applying inverse logit transformation. Table 4 presents values. structure—relevant prediction outputs integrated model object—allows streamlined workflow subsequent steps like performance evaluation recalibration can carried minimal additional input. Table 3: Model predictions () Aggregated predictions (b) Model predictions imputation Table 4: Model Beta X () Aggregated Beta X (b) Model Beta X imputation model predictions calculated, can proceed assess model’s performance external cohort. first aspect performance evaluate discrimination, reflects model’s ability distinguish patients experienced event . MiceExtVal package provides two functions assess discrimination: MiceExtVal::calculate_auc() MiceExtVal::calculate_harrell_c_index(). former computes Area Receiver Operating Characteristic Curve (AUC), appropriate binary outcomes. latter calculates Harrell’s C-index, typically used survival data. Since outcome binary (death within 30 days), use AUC measure discrimination example. model yields AUC 0.797 (95% CI 0.775, 0.819), indicates fairly good level discrimination. second key component model performance, now assess calibration, evaluates closely predicted probabilities agree observed outcomes. Calibration commonly visualized using calibration plot. MiceExtVal package, generating plot two-step process: first, calibration data must computed; , plot can created. compute calibration data, package provides two functions: MiceExtVal::get_calibration_plot_data_prop() estimates observed risks using outcome proportions. MiceExtVal::get_calibration_plot_data_surv() estimates observed risks using Kaplan–Meier approach (survival outcomes). Since validating logistic regression model binary outcome, use MiceExtVal::get_calibration_plot_data_prop(). code snippet , generate calibration plot TIMI-II model. use MiceExtVal::get_calibration_plot_data_prop() compute calibration data, followed MiceExtVal::get_calibration_plot() create plot . plot generated using ggplot2 package, allowing full customization. example, also apply custom function, clip_axis_plot(), adjust plot limits. Figure 1: Calibration plot TIMI-II predictions Figure Figure 1, observe well-calibrated model: predicted risks align closely observed outcomes across deciles risk. practice, level agreement may considered sufficient, recalibration necessary. Another way measuring accuracy predictions model observed risk Brier score. score calculated following \\[ BS = \\frac{1}{N}\\sum^N_{t = 1}(f_t - o_t)^2 \\] \\(N\\) size population, \\(f_t\\) model prediction patient \\(t\\) \\(o_t\\) observed risk patient \\(t\\) case \\(0\\) suffer event \\(1\\) otherwise. MiceExtVal package developed function MiceExtVal::calculate_brier_score help users calculate model brier score. model yields AUC 0.052 (95% CI 0.045, 0.059) demonstrait fair accuracy model predictions observed risks. However, fully demonstrate functionality MiceExtVal package, proceed recalibrating model predictions. allows us show recalibration can implemented needed affects model’s performance. MiceExtVal package provides two distinct functions perform recalibration model predictions: MiceExtVal::calculate_predictions_recalibrated_type_1() MiceExtVal::calculate_predictions_recalibrated_type_2() functions apply two different recalibration strategies. Importantly, Type 1 Type 2 recalibrations independent approaches. sequential steps refinements one another, alternative methods adjust predicted risks based external dataset. recalibration, reassess model calibration using updated calibration plots. However, recalculate AUC, since recalibration modifies predicted probabilities affect model’s ability rank individuals, thus impact discrimination. previous code snippet, types recalibrated predictions computed simultaneously stored within model object. recalibrated predictions provided aggregated values, meaning patient receives single recalibrated risk estimate, pooled across multiple imputations. resulting predictions can seen Table 5. addition recalibrated predictions, corresponding recalibration parameters—intercept slope adjustments—also saved within model object. design ensures relevant recalibration outputs centralized accessible analysis reporting. Table 5: Recalibrated predictions () Type 1 recalibration (b) Type 2 recalibration recalibration parameters obtained model : Type 1 recalibration: \\(\\alpha_{\\text{type1}} = -0.366\\) Type 2 recalibration: \\(\\alpha_{\\text{type2}} = -0.179, \\beta_{\\text{overall}} = 1.096\\) parameters automatically stored model object recalibration. like details recalibrated predictions computed, please refer documentation function. mentioned earlier, recalibration affect model discrimination. predictions shifted scaled uniformly, preserving model’s ability rank individuals. However, recalibration affect model calibration, since predictions explicitly adjusted better reflect observed outcome frequencies external cohort. visualize effect recalibration, generate calibration plots using plotting functions introduced earlier. difference specifying type recalibrated predictions wish plot. following code snippet demonstrates generate calibration plots Type 1 Type 2 recalibrated predictions. () Type 1 recalibration (b) Type 2 recalibration Figure 2: Calibration plot recalibration predictions Even though AUC change model recalibration Brier score change. predictions accurate observed risk recalibrations therefore obtain better Brier scores. model obtains Brier score 0.051 (95% CI 0.044, 0.058) type 1 recalibration 0.052 (95% CI 0.045, 0.060) type 2 recalibration technique. results pretty similar original model predictions Brier score 0.052 (95% CI 0.045, 0.059). results aligned good calibration original model predictions.","code":"timi2_model <- MiceExtVal::mv_model_logreg(   formula = day30 ~ 1.79 * sho + 0.99 * a65 + 0.92 * hig + 0.74 * dia +     0.69 * hyp + 0.59 * hrt + 0.53 * ttr + 0.47 * sex - 4.47 ) timi2_model <- timi2_model |>   MiceExtVal::calculate_predictions(gusto_imp) timi2_model$predictions_aggregated |>   utils::head() |>   kableExtra::kbl() timi2_model$predictions_data |>   utils::head() |>   kableExtra::kbl() timi2_model$betax |>   utils::head() |>   kableExtra::kbl() timi2_model$betax_data |>   utils::head() |>   kableExtra::kbl() timi2_model <- timi2_model |>   MiceExtVal::calculate_auc(gusto_imp)  auc_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$auc[\"Estimate\"],   timi2_model$auc[\"95% CI L\"],   timi2_model$auc[\"95% CI U\"] ) clip_axis_plot <- function(plot, limit = 1) {   plot +     ggplot2::xlim(c(0, limit)) +     ggplot2::ylim(c(0, limit)) }  timi2_model |>   MiceExtVal::get_calibration_plot_data_prop(     data = gusto_imp,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot() |>   clip_axis_plot(limit = 0.35) timi2_model <- timi2_model |>   MiceExtVal::calculate_brier_score(     data = gusto_imp, type = \"predictions_aggregated\", n_boot = 100   )  brier_score_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$brier_score[\"Estimate\"],   timi2_model$brier_score[\"95% CI L\"],   timi2_model$brier_score[\"95% CI U\"] ) timi2_model <- timi2_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(gusto_imp) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(gusto_imp) timi2_model$predictions_recal_type_1 |>   utils::head() |>   kableExtra::kbl() timi2_model$predictions_recal_type_2 |>   utils::head() |>   kableExtra::kbl() timi2_model |>   MiceExtVal::get_calibration_plot_data_prop(     data = gusto_imp,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot() |>   clip_axis_plot(limit = 0.35)  timi2_model |>   MiceExtVal::get_calibration_plot_data_prop(     data = gusto_imp,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot() |>   clip_axis_plot(limit = 0.35) timi2_model <- timi2_model |>   MiceExtVal::calculate_brier_score(     data = gusto_imp, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp, type = \"predictions_recal_type_2\", n_boot = 100   )  brier_score_type_1_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$brier_score_type_1[\"Estimate\"],   timi2_model$brier_score_type_1[\"95% CI L\"],   timi2_model$brier_score_type_1[\"95% CI U\"] )  brier_score_type_2_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$brier_score_type_2[\"Estimate\"],   timi2_model$brier_score_type_2[\"95% CI L\"],   timi2_model$brier_score_type_2[\"95% CI U\"] )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"performance-assessment","dir":"Articles","previous_headings":"","what":"Performance Assessment","title":"Example Of Use With Dichotomous Outcome","text":"model predictions calculated, can proceed assess model’s performance external cohort. first aspect performance evaluate discrimination, reflects model’s ability distinguish patients experienced event . MiceExtVal package provides two functions assess discrimination: MiceExtVal::calculate_auc() MiceExtVal::calculate_harrell_c_index(). former computes Area Receiver Operating Characteristic Curve (AUC), appropriate binary outcomes. latter calculates Harrell’s C-index, typically used survival data. Since outcome binary (death within 30 days), use AUC measure discrimination example. model yields AUC 0.797 (95% CI 0.775, 0.819), indicates fairly good level discrimination. second key component model performance, now assess calibration, evaluates closely predicted probabilities agree observed outcomes. Calibration commonly visualized using calibration plot. MiceExtVal package, generating plot two-step process: first, calibration data must computed; , plot can created. compute calibration data, package provides two functions: MiceExtVal::get_calibration_plot_data_prop() estimates observed risks using outcome proportions. MiceExtVal::get_calibration_plot_data_surv() estimates observed risks using Kaplan–Meier approach (survival outcomes). Since validating logistic regression model binary outcome, use MiceExtVal::get_calibration_plot_data_prop(). code snippet , generate calibration plot TIMI-II model. use MiceExtVal::get_calibration_plot_data_prop() compute calibration data, followed MiceExtVal::get_calibration_plot() create plot . plot generated using ggplot2 package, allowing full customization. example, also apply custom function, clip_axis_plot(), adjust plot limits. Figure 1: Calibration plot TIMI-II predictions Figure Figure 1, observe well-calibrated model: predicted risks align closely observed outcomes across deciles risk. practice, level agreement may considered sufficient, recalibration necessary. Another way measuring accuracy predictions model observed risk Brier score. score calculated following \\[ BS = \\frac{1}{N}\\sum^N_{t = 1}(f_t - o_t)^2 \\] \\(N\\) size population, \\(f_t\\) model prediction patient \\(t\\) \\(o_t\\) observed risk patient \\(t\\) case \\(0\\) suffer event \\(1\\) otherwise. MiceExtVal package developed function MiceExtVal::calculate_brier_score help users calculate model brier score. model yields AUC 0.052 (95% CI 0.045, 0.059) demonstrait fair accuracy model predictions observed risks. However, fully demonstrate functionality MiceExtVal package, proceed recalibrating model predictions. allows us show recalibration can implemented needed affects model’s performance.","code":"timi2_model <- timi2_model |>   MiceExtVal::calculate_auc(gusto_imp)  auc_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$auc[\"Estimate\"],   timi2_model$auc[\"95% CI L\"],   timi2_model$auc[\"95% CI U\"] ) clip_axis_plot <- function(plot, limit = 1) {   plot +     ggplot2::xlim(c(0, limit)) +     ggplot2::ylim(c(0, limit)) }  timi2_model |>   MiceExtVal::get_calibration_plot_data_prop(     data = gusto_imp,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot() |>   clip_axis_plot(limit = 0.35) timi2_model <- timi2_model |>   MiceExtVal::calculate_brier_score(     data = gusto_imp, type = \"predictions_aggregated\", n_boot = 100   )  brier_score_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$brier_score[\"Estimate\"],   timi2_model$brier_score[\"95% CI L\"],   timi2_model$brier_score[\"95% CI U\"] )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"model-recalibration","dir":"Articles","previous_headings":"","what":"Model Recalibration","title":"Example Of Use With Dichotomous Outcome","text":"MiceExtVal package provides two distinct functions perform recalibration model predictions: MiceExtVal::calculate_predictions_recalibrated_type_1() MiceExtVal::calculate_predictions_recalibrated_type_2() functions apply two different recalibration strategies. Importantly, Type 1 Type 2 recalibrations independent approaches. sequential steps refinements one another, alternative methods adjust predicted risks based external dataset. recalibration, reassess model calibration using updated calibration plots. However, recalculate AUC, since recalibration modifies predicted probabilities affect model’s ability rank individuals, thus impact discrimination. previous code snippet, types recalibrated predictions computed simultaneously stored within model object. recalibrated predictions provided aggregated values, meaning patient receives single recalibrated risk estimate, pooled across multiple imputations. resulting predictions can seen Table 5. addition recalibrated predictions, corresponding recalibration parameters—intercept slope adjustments—also saved within model object. design ensures relevant recalibration outputs centralized accessible analysis reporting. Table 5: Recalibrated predictions () Type 1 recalibration (b) Type 2 recalibration recalibration parameters obtained model : Type 1 recalibration: \\(\\alpha_{\\text{type1}} = -0.366\\) Type 2 recalibration: \\(\\alpha_{\\text{type2}} = -0.179, \\beta_{\\text{overall}} = 1.096\\) parameters automatically stored model object recalibration. like details recalibrated predictions computed, please refer documentation function. mentioned earlier, recalibration affect model discrimination. predictions shifted scaled uniformly, preserving model’s ability rank individuals. However, recalibration affect model calibration, since predictions explicitly adjusted better reflect observed outcome frequencies external cohort. visualize effect recalibration, generate calibration plots using plotting functions introduced earlier. difference specifying type recalibrated predictions wish plot. following code snippet demonstrates generate calibration plots Type 1 Type 2 recalibrated predictions. () Type 1 recalibration (b) Type 2 recalibration Figure 2: Calibration plot recalibration predictions Even though AUC change model recalibration Brier score change. predictions accurate observed risk recalibrations therefore obtain better Brier scores. model obtains Brier score 0.051 (95% CI 0.044, 0.058) type 1 recalibration 0.052 (95% CI 0.045, 0.060) type 2 recalibration technique. results pretty similar original model predictions Brier score 0.052 (95% CI 0.045, 0.059). results aligned good calibration original model predictions.","code":"timi2_model <- timi2_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(gusto_imp) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(gusto_imp) timi2_model$predictions_recal_type_1 |>   utils::head() |>   kableExtra::kbl() timi2_model$predictions_recal_type_2 |>   utils::head() |>   kableExtra::kbl() timi2_model |>   MiceExtVal::get_calibration_plot_data_prop(     data = gusto_imp,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot() |>   clip_axis_plot(limit = 0.35)  timi2_model |>   MiceExtVal::get_calibration_plot_data_prop(     data = gusto_imp,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot() |>   clip_axis_plot(limit = 0.35) timi2_model <- timi2_model |>   MiceExtVal::calculate_brier_score(     data = gusto_imp, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp, type = \"predictions_recal_type_2\", n_boot = 100   )  brier_score_type_1_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$brier_score_type_1[\"Estimate\"],   timi2_model$brier_score_type_1[\"95% CI L\"],   timi2_model$brier_score_type_1[\"95% CI U\"] )  brier_score_type_2_res <- sprintf(   \"%.3f (95%% CI %.3f, %.3f)\",   timi2_model$brier_score_type_2[\"Estimate\"],   timi2_model$brier_score_type_2[\"95% CI L\"],   timi2_model$brier_score_type_2[\"95% CI U\"] )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"comparing-models","dir":"Articles","previous_headings":"","what":"Comparing models","title":"Example Of Use With Dichotomous Outcome","text":"External validation often performed assess performance single model, also compare multiple models within external cohort. comparison can help determine model performs best overall within specific subgroups interest. previous sections, demonstrated externally validate single model using MiceExtVal package. However, package also includes functionality facilitate comparisons models, whether differ structure applied different subgroups. example, section stratify validation TIMI-II model gender, comparing performance separately men women patients. , need define two distinct model objects—one men one women. Although models share formula, must created separately allow storage comparison respective results. also need stratify cohort sex order use subcohorts parameters prediction calculations. stratified cohorts models defined, can now calculate performance results group. important note model evaluated using corresponding subcohort. Specifically, model timi2_model_men store evaluate results gusto_imp_men subcohort, includes men patients. Similarly, model women evaluate data gusto_imp_women subcohort. ensures models validated appropriate subset cohort, allowing fair comparison performance genders. results stratified models stored, can begin comparing model performances. useful starting point compare calibration plots different subgroups. Similar individual calibration plots, two functions depending want estimate observed risks: MiceExtVal::get_stratified_calibration_plot_prop() estimating observed risks using outcome proportions. MiceExtVal::get_stratified_calibration_plot_surv() estimating risks using Kaplan–Meier approach (typically survival data). case, since working binary outcome stratifying sex, need use MiceExtVal::get_stratified_calibration_plot_prop(). generate stratified calibration plot, ’ll need pass several arguments function: external validation data (e.g., gusto_imp) number groups type prediction (either recalibrated original predictions) list models compare (case, timi2_model_men timi2_model_women). allow function overlay calibration plots models figure, facilitating direct comparison.    Note pass entire imputed dataset (gusto_imp) argument, even though model stores results respective subcohort (men women). necessary function needs access full dataset order correctly extract process relevant subcohort model. function uses subcohort specified model (e.g., gusto_imp_men men) calculate appropriate calibration data generate corresponding calibration plots. passing complete dataset, function ensures stratified calibration plots generated correctly, comparing models’ calibration context full cohort’s distribution characteristics. MiceExtVal package also includes functionality generating forest plot compare discrimination abilities different models. example, visualize AUC (Area Curve), package also allows comparison Harrell C-Index survival outcomes. forest plot generation process split two steps: Data preparation: first step generates data used forest plot. Forest plot creation: second step generates actual plot prepared data. compare different models, can stratify results binding data different subgroups (e.g., men women patients). Models share name across subgroups merged final forest plot, making easy compare performance model different groups. following example, generate two separate strata model, TIMI-II, one men one women, pass strata forest plot function.  following example, generate single strat, labeled Overall, combines data models, one men one women. allows us compare performance two stratified models single forest plot. Note removed legend plot, one strat. Since legend redundant case, opted exclude . ’s worth noting , ggplot2 plot, forest plot can customized. can modify way, reintroducing legend, adjusting colors, tweaking visual elements fit needs.  Finally, concepts can combined generate forest plot compares multiple models across multiple strata. following example demonstrates compare general model stratified validation, allowing side--side comparison model performance across different subgroups overall cohort.  forestplot functions also allow us generate data Brier score results. next code snippet generates forestplot compares different Brier score model. Figure 3: Forestplot Brier score comparison","code":"timi2_model_men <- MiceExtVal::mv_model_logreg(   formula = day30 ~ 1.79 * sho + 0.99 * a65 + 0.92 * hig + 0.74 * dia +     0.69 * hyp + 0.59 * hrt + 0.53 * ttr + 0.47 * sex - 4.47 ) timi2_model_women <- MiceExtVal::mv_model_logreg(   formula = day30 ~ 1.79 * sho + 0.99 * a65 + 0.92 * hig + 0.74 * dia +     0.69 * hyp + 0.59 * hrt + 0.53 * ttr + 0.47 * sex - 4.47 ) gusto_imp_men <- gusto_imp |> dplyr::filter(sex == 0) gusto_imp_women <- gusto_imp |> dplyr::filter(sex == 1) timi2_model_men <- timi2_model_men |>   MiceExtVal::calculate_predictions(gusto_imp_men) |>   MiceExtVal::calculate_predictions_recalibrated_type_1(gusto_imp_men) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(gusto_imp_men) |>   MiceExtVal::calculate_auc(gusto_imp_men) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp_men, type = \"predictions_aggregated\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp_men, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp_men, type = \"predictions_recal_type_2\", n_boot = 100   )  timi2_model_women <- timi2_model_women |>   MiceExtVal::calculate_predictions(gusto_imp_women) |>   MiceExtVal::calculate_predictions_recalibrated_type_1(gusto_imp_women) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(gusto_imp_women) |>   MiceExtVal::calculate_auc(gusto_imp_women) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp_women, type = \"predictions_aggregated\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp_women, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = gusto_imp_women, type = \"predictions_recal_type_2\", n_boot = 100   ) #| MiceExtVal::get_stratified_calibration_plot_prop(   data = gusto_imp,   n_groups = 10,   type = \"predictions_aggregated\",   Men = timi2_model_men,   Women = timi2_model_women ) |>   clip_axis_plot(limit = 0.45) MiceExtVal::get_stratified_calibration_plot_prop(   data = gusto_imp,   n_groups = 10,   type = \"predictions_recal_type_1\",   Men = timi2_model_men,   Women = timi2_model_women ) |>   clip_axis_plot(limit = 0.45) MiceExtVal::get_stratified_calibration_plot_prop(   data = gusto_imp,   n_groups = 10,   type = \"predictions_recal_type_2\",   Men = timi2_model_men,   Women = timi2_model_women ) |>   clip_axis_plot(limit = 0.45) dplyr::bind_rows(   MiceExtVal::get_forestplot_data(strat = \"Men\", type = \"auc\", `TIMI-II` = timi2_model_men),   MiceExtVal::get_forestplot_data(strat = \"Women\", type = \"auc\", `TIMI-II` = timi2_model_women) ) |>   MiceExtVal::get_forestplot(center = 0.75) fp <- MiceExtVal::get_forestplot_data(   strat = \"Overall\", type = \"auc\",   `TIMI-II Men` = timi2_model_men, `TIMI-II Women` = timi2_model_women ) |>   MiceExtVal::get_forestplot(center = 0.75, digits = 2, table = TRUE)  fp[[2]] <- fp[[2]] +   ggplot2::theme(legend.position = \"none\")  plot(fp) dplyr::bind_rows(   MiceExtVal::get_forestplot_data(     strat = \"Overall\", type = \"auc\",     `TIMI-II` = timi2_model   ),   MiceExtVal::get_forestplot_data(     strat = \"Men\", type = \"auc\", `TIMI-II strat` = timi2_model_men   ),   MiceExtVal::get_forestplot_data(     strat = \"Women\", type = \"auc\", `TIMI-II strat` = timi2_model_women   ), ) |>   MiceExtVal::get_forestplot(center = 0.75, digits = 2, table = TRUE) data <- dplyr::bind_rows(   MiceExtVal::get_forestplot_data(     strat = \"Original\", type = \"brier_score\",     Men = timi2_model_men, Women = timi2_model_women   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 1 recalibration\", type = \"brier_score_type_1\",     Men = timi2_model_men, Women = timi2_model_women   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 2 recalibration\", type = \"brier_score_type_2\",     Men = timi2_model_men, Women = timi2_model_women   ), )  data |>   MiceExtVal::get_forestplot(center = mean(data[[\"estimate\"]]), digit = 2, table = TRUE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"calibration-comparison-stratified-calibration-plots","dir":"Articles","previous_headings":"","what":"Calibration Comparison: Stratified Calibration Plots","title":"Example Of Use With Dichotomous Outcome","text":"results stratified models stored, can begin comparing model performances. useful starting point compare calibration plots different subgroups. Similar individual calibration plots, two functions depending want estimate observed risks: MiceExtVal::get_stratified_calibration_plot_prop() estimating observed risks using outcome proportions. MiceExtVal::get_stratified_calibration_plot_surv() estimating risks using Kaplan–Meier approach (typically survival data). case, since working binary outcome stratifying sex, need use MiceExtVal::get_stratified_calibration_plot_prop(). generate stratified calibration plot, ’ll need pass several arguments function: external validation data (e.g., gusto_imp) number groups type prediction (either recalibrated original predictions) list models compare (case, timi2_model_men timi2_model_women). allow function overlay calibration plots models figure, facilitating direct comparison.    Note pass entire imputed dataset (gusto_imp) argument, even though model stores results respective subcohort (men women). necessary function needs access full dataset order correctly extract process relevant subcohort model. function uses subcohort specified model (e.g., gusto_imp_men men) calculate appropriate calibration data generate corresponding calibration plots. passing complete dataset, function ensures stratified calibration plots generated correctly, comparing models’ calibration context full cohort’s distribution characteristics.","code":"#| MiceExtVal::get_stratified_calibration_plot_prop(   data = gusto_imp,   n_groups = 10,   type = \"predictions_aggregated\",   Men = timi2_model_men,   Women = timi2_model_women ) |>   clip_axis_plot(limit = 0.45) MiceExtVal::get_stratified_calibration_plot_prop(   data = gusto_imp,   n_groups = 10,   type = \"predictions_recal_type_1\",   Men = timi2_model_men,   Women = timi2_model_women ) |>   clip_axis_plot(limit = 0.45) MiceExtVal::get_stratified_calibration_plot_prop(   data = gusto_imp,   n_groups = 10,   type = \"predictions_recal_type_2\",   Men = timi2_model_men,   Women = timi2_model_women ) |>   clip_axis_plot(limit = 0.45)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"discrimination-comparison-forestplot","dir":"Articles","previous_headings":"","what":"Discrimination Comparison: Forestplot","title":"Example Of Use With Dichotomous Outcome","text":"MiceExtVal package also includes functionality generating forest plot compare discrimination abilities different models. example, visualize AUC (Area Curve), package also allows comparison Harrell C-Index survival outcomes. forest plot generation process split two steps: Data preparation: first step generates data used forest plot. Forest plot creation: second step generates actual plot prepared data. compare different models, can stratify results binding data different subgroups (e.g., men women patients). Models share name across subgroups merged final forest plot, making easy compare performance model different groups. following example, generate two separate strata model, TIMI-II, one men one women, pass strata forest plot function.  following example, generate single strat, labeled Overall, combines data models, one men one women. allows us compare performance two stratified models single forest plot. Note removed legend plot, one strat. Since legend redundant case, opted exclude . ’s worth noting , ggplot2 plot, forest plot can customized. can modify way, reintroducing legend, adjusting colors, tweaking visual elements fit needs.  Finally, concepts can combined generate forest plot compares multiple models across multiple strata. following example demonstrates compare general model stratified validation, allowing side--side comparison model performance across different subgroups overall cohort.  forestplot functions also allow us generate data Brier score results. next code snippet generates forestplot compares different Brier score model. Figure 3: Forestplot Brier score comparison","code":"dplyr::bind_rows(   MiceExtVal::get_forestplot_data(strat = \"Men\", type = \"auc\", `TIMI-II` = timi2_model_men),   MiceExtVal::get_forestplot_data(strat = \"Women\", type = \"auc\", `TIMI-II` = timi2_model_women) ) |>   MiceExtVal::get_forestplot(center = 0.75) fp <- MiceExtVal::get_forestplot_data(   strat = \"Overall\", type = \"auc\",   `TIMI-II Men` = timi2_model_men, `TIMI-II Women` = timi2_model_women ) |>   MiceExtVal::get_forestplot(center = 0.75, digits = 2, table = TRUE)  fp[[2]] <- fp[[2]] +   ggplot2::theme(legend.position = \"none\")  plot(fp) dplyr::bind_rows(   MiceExtVal::get_forestplot_data(     strat = \"Overall\", type = \"auc\",     `TIMI-II` = timi2_model   ),   MiceExtVal::get_forestplot_data(     strat = \"Men\", type = \"auc\", `TIMI-II strat` = timi2_model_men   ),   MiceExtVal::get_forestplot_data(     strat = \"Women\", type = \"auc\", `TIMI-II strat` = timi2_model_women   ), ) |>   MiceExtVal::get_forestplot(center = 0.75, digits = 2, table = TRUE) data <- dplyr::bind_rows(   MiceExtVal::get_forestplot_data(     strat = \"Original\", type = \"brier_score\",     Men = timi2_model_men, Women = timi2_model_women   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 1 recalibration\", type = \"brier_score_type_1\",     Men = timi2_model_men, Women = timi2_model_women   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 2 recalibration\", type = \"brier_score_type_2\",     Men = timi2_model_men, Women = timi2_model_women   ), )  data |>   MiceExtVal::get_forestplot(center = mean(data[[\"estimate\"]]), digit = 2, table = TRUE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-logreg.html","id":"brier-score-comparison-forestplot","dir":"Articles","previous_headings":"Comparing models","what":"Brier Score Comparison: Forestplot","title":"Example Of Use With Dichotomous Outcome","text":"forestplot functions also allow us generate data Brier score results. next code snippet generates forestplot compares different Brier score model. Figure 3: Forestplot Brier score comparison","code":"data <- dplyr::bind_rows(   MiceExtVal::get_forestplot_data(     strat = \"Original\", type = \"brier_score\",     Men = timi2_model_men, Women = timi2_model_women   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 1 recalibration\", type = \"brier_score_type_1\",     Men = timi2_model_men, Women = timi2_model_women   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 2 recalibration\", type = \"brier_score_type_2\",     Men = timi2_model_men, Women = timi2_model_women   ), )  data |>   MiceExtVal::get_forestplot(center = mean(data[[\"estimate\"]]), digit = 2, table = TRUE)"},{"path":[]},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"Required Libraries","title":"Example Of Use With Survival Outcome","text":"following code snippet lists libraries needed run report. vignette, demonstrate use MiceExtVal package externally validate prediction model survival outcome. Specifically, validate Framingham model cardiovascular risk prediction, see Wilson et al. (1998), using publicly available dataset obtained Kaggle. Framingham model Cox model estimates 10-year risk suffering heart attack patients 30-79 years old history Coronary Heart Disease (CHD). example organized following steps: Exploring dataset Imputing missing data Defining Framingham model Performing external validation structure designed guide users typical workflow, highlighting MiceExtVal can support robust validation survival models using multiply imputed data.","code":"library(MiceExtVal)  # tidyverse packages library(dplyr) library(tidyr) library(tibble) library(ggplot2)  # table formatting packages library(kableExtra) library(gtsummary)  # analysis required packages library(mice) library(survival)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"explore-the-dataset","dir":"Articles","previous_headings":"","what":"Explore the Dataset","title":"Example Of Use With Survival Outcome","text":"first step every external validation become familiar dataset. perform external validation Framingham model, require dataset contains relevant predictor variables used model. purpose, MiceExtVal package includes version Framingham dataset, originally shared Kaggle Shrey Jain. dataset accessible MiceExtVal::framingham dataset includes key clinical demographic variables needed replicate Framingham risk prediction. summary dataset’s variables provided Table 1, serves starting point exploring structure content data. Table 1: Summary table Framingham dataset dataset contains missing values, particularly cholesterol-related variables Total Cholesterol, HDL Cholesterol, LDL Cholesterol. missing values must addressed proceeding model validation. Table 2 shows percentage missing data variable, highlighting extent missingness across dataset. Table 2: Percentage missings","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"impute-missing-data","dir":"Articles","previous_headings":"","what":"Impute Missing Data","title":"Example Of Use With Survival Outcome","text":"address missing values, use mice package perform multiple imputation, see van Buuren & Groothuis-Oudshoorn (2011). vignette, apply default imputation method provided mice, primary goal optimize imputation demonstrate realistic use case missing data must handled prior external validation. step allows us proceed validating one prediction models using imputed dataset. report aimed show MiceExtVal package works explanation impute missing data. need explanation methods please refer mice explanations, (Buuren, 2018; van Buuren & Groothuis-Oudshoorn, 2011). imputation imputed datasets stored fram_long long format.","code":"pred_matrix <- mice::make.predictorMatrix(MiceExtVal::framingham) pred_matrix[, \"randid\"] <- 0 pred_matrix[, \"period\"] <- 0  mice_data <- mice::mice(MiceExtVal::framingham) fram_long <- mice::complete(mice_data, \"long\")"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"the-framingham-model","dir":"Articles","previous_headings":"","what":"The Framingham Model","title":"Example Of Use With Survival Outcome","text":"data prepared, next step examine prediction model intend validate: Framingham risk model, see Wilson et al. (1998). model based Cox proportional hazards regression designed estimate risk developing coronary heart disease individuals aged 30 79 years. model includes several clinical demographic predictors, estimated coefficients presented Table 3. Table 3: Framingham model coefficients variables categorical, type variables must represented numeric. variable multicategorical Total Cholesterol need generate many dichotomous variables categories. type representation usually used mathematical formula definition models. can define Framingham model MiceExtVal package validation must ensure predictor variables dataset consistent used original derivation cohort. Although dataset includes necessary information calculate patient’s risk, several variables need transformed match model package specifications. shown Table 3, continuous variables—specifically Total Cholesterol,HDL Cholesterol, Blood Pressure categorized original model. Therefore, recode variables accordingly applying model data. total cholesterol variable categorized five categories, less \\(160\\) mg/dL, \\(160\\) \\(199\\) mg/dL, \\(200\\) \\(239\\) mg/dL, \\(240\\) \\(279\\) mg/dl, \\(280\\) mg/dL. following code snippet generates variable dataset. Framingham model characterizes HDL cholesterol five groups, less \\(35\\) mg/dL, \\(35\\) \\(44\\) mg/dL, \\(45\\) \\(49\\) mg/dL, \\(50\\) \\(59\\) mg/dL, \\(60\\) mg/dL. following code snippet generates variable dataset. model defined variable aggregates systolyc blood pressure diastolic blood pressure five groups hypertension. defined Wilson et al. (1998), categorize individual blood pressure variables five groups, optimal, normal, high-normal, hypertension , hypertension II-IV. patient different blood pressure categories use highest one representation state. following code adds variable dataset, first generate individual categorization variables generate pressure variable aggregation . first generate variable called pressure categorize pressures one variable. can generate different variables used model pressure variable. variables like cursmoke diabetes factors used model need transform numeric variables \\(1\\) indicates TRUE \\(0\\) indicates FALSE. also generate variable age2 \\(age^2\\) needed women model. Additionally, also generate survival outcome anychd_surv needed define model.","code":"fram_long <- fram_long |>   dplyr::mutate(     totchol_less_160 = as.numeric(totchol < 160),     totchol_160_199 = as.numeric(totchol >= 160 & totchol < 200),     totchol_200_239 = as.numeric(totchol >= 200 & totchol < 240),     totchol_240_279 = as.numeric(totchol >= 240 & totchol < 280),     totchol_greater_280 = as.numeric(totchol >= 280),   ) fram_long <- fram_long |>   dplyr::mutate(     hdl_less_35 = as.numeric(hdlc < 35),     hdl_35_44 = as.numeric(hdlc >= 35 & hdlc < 44),     hdl_45_49 = as.numeric(hdlc >= 45 & hdlc < 49),     hdl_50_59 = as.numeric(hdlc >= 50 & hdlc < 59),     hdl_greater_60 = as.numeric(hdlc >= 60),   ) pressure_labels <- c(   \"optimal\", \"normal\", \"high-normal\", \"hypertension I\", \"hypertension II-IV\" ) fram_long <- fram_long |>   dplyr::mutate(     sys_lvl = cut(       sysbp,       breaks = c(-Inf, 120, 130, 140, 160, Inf),       labels = pressure_labels     ),     dys_lvl = cut(       diabp,       breaks = c(-Inf, 80, 85, 90, 100, Inf),       labels = pressure_labels     ),     pressure = purrr::map2_int(       as.numeric(sys_lvl), as.numeric(dys_lvl), ~ max(.x, .y)     ),     pressure = factor(       pressure,       labels = pressure_labels     )   ) fram_long <- fram_long |>   dplyr::mutate(     bp_optimal = as.numeric(pressure == \"optimal\"),     bp_high_normal = as.numeric(pressure == \"high-normal\"),     bp_hypertension_i = as.numeric(pressure == \"hypertension I\"),     bp_hypertension_ii_iv = as.numeric(pressure == \"hypertension II-IV\")   ) fram_long <- fram_long |>   dplyr::mutate(     cursmoke = as.numeric(cursmoke == \"1\"),     diabetes = as.numeric(diabetes == \"1\"),     age2 = age**2,     anychd_surv = survival::Surv(timechd, anychd == \"Yes\")   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"requirements-to-define-the-model","dir":"Articles","previous_headings":"","what":"Requirements to Define the Model","title":"Example Of Use With Survival Outcome","text":"can define Framingham model MiceExtVal package validation must ensure predictor variables dataset consistent used original derivation cohort. Although dataset includes necessary information calculate patient’s risk, several variables need transformed match model package specifications. shown Table 3, continuous variables—specifically Total Cholesterol,HDL Cholesterol, Blood Pressure categorized original model. Therefore, recode variables accordingly applying model data. total cholesterol variable categorized five categories, less \\(160\\) mg/dL, \\(160\\) \\(199\\) mg/dL, \\(200\\) \\(239\\) mg/dL, \\(240\\) \\(279\\) mg/dl, \\(280\\) mg/dL. following code snippet generates variable dataset. Framingham model characterizes HDL cholesterol five groups, less \\(35\\) mg/dL, \\(35\\) \\(44\\) mg/dL, \\(45\\) \\(49\\) mg/dL, \\(50\\) \\(59\\) mg/dL, \\(60\\) mg/dL. following code snippet generates variable dataset. model defined variable aggregates systolyc blood pressure diastolic blood pressure five groups hypertension. defined Wilson et al. (1998), categorize individual blood pressure variables five groups, optimal, normal, high-normal, hypertension , hypertension II-IV. patient different blood pressure categories use highest one representation state. following code adds variable dataset, first generate individual categorization variables generate pressure variable aggregation . first generate variable called pressure categorize pressures one variable. can generate different variables used model pressure variable. variables like cursmoke diabetes factors used model need transform numeric variables \\(1\\) indicates TRUE \\(0\\) indicates FALSE. also generate variable age2 \\(age^2\\) needed women model. Additionally, also generate survival outcome anychd_surv needed define model.","code":"fram_long <- fram_long |>   dplyr::mutate(     totchol_less_160 = as.numeric(totchol < 160),     totchol_160_199 = as.numeric(totchol >= 160 & totchol < 200),     totchol_200_239 = as.numeric(totchol >= 200 & totchol < 240),     totchol_240_279 = as.numeric(totchol >= 240 & totchol < 280),     totchol_greater_280 = as.numeric(totchol >= 280),   ) fram_long <- fram_long |>   dplyr::mutate(     hdl_less_35 = as.numeric(hdlc < 35),     hdl_35_44 = as.numeric(hdlc >= 35 & hdlc < 44),     hdl_45_49 = as.numeric(hdlc >= 45 & hdlc < 49),     hdl_50_59 = as.numeric(hdlc >= 50 & hdlc < 59),     hdl_greater_60 = as.numeric(hdlc >= 60),   ) pressure_labels <- c(   \"optimal\", \"normal\", \"high-normal\", \"hypertension I\", \"hypertension II-IV\" ) fram_long <- fram_long |>   dplyr::mutate(     sys_lvl = cut(       sysbp,       breaks = c(-Inf, 120, 130, 140, 160, Inf),       labels = pressure_labels     ),     dys_lvl = cut(       diabp,       breaks = c(-Inf, 80, 85, 90, 100, Inf),       labels = pressure_labels     ),     pressure = purrr::map2_int(       as.numeric(sys_lvl), as.numeric(dys_lvl), ~ max(.x, .y)     ),     pressure = factor(       pressure,       labels = pressure_labels     )   ) fram_long <- fram_long |>   dplyr::mutate(     bp_optimal = as.numeric(pressure == \"optimal\"),     bp_high_normal = as.numeric(pressure == \"high-normal\"),     bp_hypertension_i = as.numeric(pressure == \"hypertension I\"),     bp_hypertension_ii_iv = as.numeric(pressure == \"hypertension II-IV\")   ) fram_long <- fram_long |>   dplyr::mutate(     cursmoke = as.numeric(cursmoke == \"1\"),     diabetes = as.numeric(diabetes == \"1\"),     age2 = age**2,     anychd_surv = survival::Surv(timechd, anychd == \"Yes\")   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"total-cholesterol","dir":"Articles","previous_headings":"The Framingham Model","what":"Total Cholesterol","title":"Example Of Use With Survival Outcome","text":"total cholesterol variable categorized five categories, less \\(160\\) mg/dL, \\(160\\) \\(199\\) mg/dL, \\(200\\) \\(239\\) mg/dL, \\(240\\) \\(279\\) mg/dl, \\(280\\) mg/dL. following code snippet generates variable dataset.","code":"fram_long <- fram_long |>   dplyr::mutate(     totchol_less_160 = as.numeric(totchol < 160),     totchol_160_199 = as.numeric(totchol >= 160 & totchol < 200),     totchol_200_239 = as.numeric(totchol >= 200 & totchol < 240),     totchol_240_279 = as.numeric(totchol >= 240 & totchol < 280),     totchol_greater_280 = as.numeric(totchol >= 280),   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"hdl-cholesterol","dir":"Articles","previous_headings":"The Framingham Model","what":"HDL Cholesterol","title":"Example Of Use With Survival Outcome","text":"Framingham model characterizes HDL cholesterol five groups, less \\(35\\) mg/dL, \\(35\\) \\(44\\) mg/dL, \\(45\\) \\(49\\) mg/dL, \\(50\\) \\(59\\) mg/dL, \\(60\\) mg/dL. following code snippet generates variable dataset.","code":"fram_long <- fram_long |>   dplyr::mutate(     hdl_less_35 = as.numeric(hdlc < 35),     hdl_35_44 = as.numeric(hdlc >= 35 & hdlc < 44),     hdl_45_49 = as.numeric(hdlc >= 45 & hdlc < 49),     hdl_50_59 = as.numeric(hdlc >= 50 & hdlc < 59),     hdl_greater_60 = as.numeric(hdlc >= 60),   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"blood-pressure","dir":"Articles","previous_headings":"The Framingham Model","what":"Blood Pressure","title":"Example Of Use With Survival Outcome","text":"model defined variable aggregates systolyc blood pressure diastolic blood pressure five groups hypertension. defined Wilson et al. (1998), categorize individual blood pressure variables five groups, optimal, normal, high-normal, hypertension , hypertension II-IV. patient different blood pressure categories use highest one representation state. following code adds variable dataset, first generate individual categorization variables generate pressure variable aggregation . first generate variable called pressure categorize pressures one variable. can generate different variables used model pressure variable.","code":"pressure_labels <- c(   \"optimal\", \"normal\", \"high-normal\", \"hypertension I\", \"hypertension II-IV\" ) fram_long <- fram_long |>   dplyr::mutate(     sys_lvl = cut(       sysbp,       breaks = c(-Inf, 120, 130, 140, 160, Inf),       labels = pressure_labels     ),     dys_lvl = cut(       diabp,       breaks = c(-Inf, 80, 85, 90, 100, Inf),       labels = pressure_labels     ),     pressure = purrr::map2_int(       as.numeric(sys_lvl), as.numeric(dys_lvl), ~ max(.x, .y)     ),     pressure = factor(       pressure,       labels = pressure_labels     )   ) fram_long <- fram_long |>   dplyr::mutate(     bp_optimal = as.numeric(pressure == \"optimal\"),     bp_high_normal = as.numeric(pressure == \"high-normal\"),     bp_hypertension_i = as.numeric(pressure == \"hypertension I\"),     bp_hypertension_ii_iv = as.numeric(pressure == \"hypertension II-IV\")   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"generating-extra-needed-variables","dir":"Articles","previous_headings":"The Framingham Model","what":"Generating Extra Needed Variables","title":"Example Of Use With Survival Outcome","text":"variables like cursmoke diabetes factors used model need transform numeric variables \\(1\\) indicates TRUE \\(0\\) indicates FALSE. also generate variable age2 \\(age^2\\) needed women model. Additionally, also generate survival outcome anychd_surv needed define model.","code":"fram_long <- fram_long |>   dplyr::mutate(     cursmoke = as.numeric(cursmoke == \"1\"),     diabetes = as.numeric(diabetes == \"1\"),     age2 = age**2,     anychd_surv = survival::Surv(timechd, anychd == \"Yes\")   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"external-validation","dir":"Articles","previous_headings":"","what":"External Validation","title":"Example Of Use With Survival Outcome","text":"Traditional external validation typically performed single, complete dataset involves several sequential steps. First, original model used generate predictions new dataset. , model’s performance evaluated assessing discrimination (e.g. AUC) calibration. necessary, model may recalibrated, performance metrics re-evaluated adjustment. However, working datasets containing missing values—especially clinical research—multiple imputation often used preserve data integrity avoid bias. result, longer single dataset, multiple imputed versions original data, representing plausible completion. complicates traditional validation workflows, since imputed dataset yields different results must pooled appropriately. MiceExtVal package designed bridge gap streamlining external validation process across multiple imputed datasets. allows users perform validation steps—including prediction, performance evaluation, optional recalibration properly handling variability introduced imputation. generating required Framingham variables, can proceed define model using MiceExtVal package. original Framingham model stratified sex, meaning separate sets coefficients used men women. reflect structure, define two separate Cox models, one sex. MiceExtVal package provides MiceExtVal::mv_model_cox() function specify Cox proportional hazards models can used multiply imputed data. following steps, use function define sex-specific models external validation. MiceExtVal package, models defined using specialized constructors depending outcome type: use MiceExtVal::mv_model_cox() Cox proportional hazards models MiceExtVal::mv_model_logreg() logistic regression models. Since Framingham model survival model based Cox framework, use MiceExtVal::mv_model_cox() example. define Cox model external validation, following key components must provided: formula: formula specifying structure model. includes predictor variables coefficients. original model developed centered variables, formula reflect subtracting corresponding means correctly compute linear predictor (\\(\\beta \\cdot X\\)). S0: baseline survival probability \\(S_0(t)\\) specific time point \\(t\\). Framingham model, predictions made 10 years, use \\(S_0(10 \\text{ years})\\) provided original publication. Framingham model stratified sex, define validate two separate models—one men one women—corresponding formula baseline survival value. next code snippet generates men model formula following original mean values coefficients described previous tables. defined needed parameters model can create model follows. women can reproduce already done men. previous parameters generate women_model externally validate Framingham women model. Framingham model defined stratified model need generate stratified datasets. model results must calculated respective subcohort dataset. obtain subcohorts simply filter data genders generate men_fram_long women_fram_long variables. ’ve defined Framingham model using MiceExtVal package, can proceed perform external validation. functions package organized two main categories: Functions calculate predictions results based model definition begin calculate_. Functions obtain external validation results begin get_. external validation process can divided three main phases: Calculate Predictions: step involves generating predicted risk scores individuals validation cohort. Calculate Recalibrations: necessary, recalibration model performed adjust systematic differences derivation validation cohorts. Obtain External Validation Results: final step generates validation metrics, discrimination calibration, assess model’s performance external dataset. executing MiceExtVal::calculate_predictions(), model object updated additional information derived imputed dataset. Specifically, predicted probabilities computed imputation stored within model. addition, function calculates aggregated predictions patient pooling results across imputations. example values shown Table 4. Table 4: Men Framingham model predictions () Aggregated predictions (b) Model predictions imputation Beyond predicted probabilities, model object also includes prognostic indexes (\\(\\beta \\cdot X\\)), individual imputation level pooled estimates. Table 5 presents values. Table 5: Men Framingham model Beta X () Aggregated Beta X (b) Model Beta X imputation model performance can separated two. ability model discriminate high-risk patients low-risk patients calibration .e. ability match real risk predicted risk. package provides different functions depending type outcome model externally validated. case externally validating Cox model use functions associated model survival outcome. model discrimination ability calculated C-index AUC. package provides users two functions, MiceExtVal::calculate_auc() AUC calculation MiceExtVal::calculate_harrell_c_index() calculates Harrell C-Index. functions require model predictions already calculated. case externally validating Cox model, can calculate C-Index models using MiceExtVal::calculate_harrell_c_index() function. Table 6: C-Index results article also show recalibrate model two techniques provided package. recalibration predictions modify value C-Index predictions modified using parameters recalibration. variable modified equally order predictions modified therefore C-Index remains unchanged. calibration plots help users visualize accurate model predictions observed risks. calculate calibration plots mandatory calculated model predictions recalibration needed. package provides user functions allow generate calibration plots. calibration plot calculation divided two steps, first step calculates data observed predicted risks represented. observed risk can calculated different ways, package defined two function allow users calculate . MiceExtVal::get_calibration_plot_data_surv() function calculates observed risk Kaplan-Meier estimator MiceExtVal::get_calibration_plot_data_prop() function calculates observed risk proportion events. data calibration plot can generated using MiceExtVal::get_calibration_plot() function. following code snippet shows calculate calibration plots Framingham models. () Men (b) Women Figure 1: Framingham original predictions calibration plots calibration plots ggplot object can modified plot ggplot2 package. Feel free modify match requirements. Brier score statistic measure accuracy predicted riska observed outcome. survival analysis observed risk patients. Neverteless can assume outcome dichotomous calculate Brier score type outcome. statistic calculated : \\[ BS = \\frac{1}{N}\\sum^N_{t = 1}(f_t - o_t)^2 \\] \\(N\\) size population, \\(f_t\\) model prediction patient \\(t\\) \\(o_t\\) observed risk patient \\(t\\) case \\(0\\) suffer event \\(1\\) otherwise. MiceExtVal package developed function MiceExtVal::calculate_brier_score help users calculate model brier score. Table 7: Brier score results Table 7 represented brier score results models. important remark comparable calculated different subcohorts framingham complete cohort. validating model external cohort common model predictions match observed risks new cohort. minimize problem developed two functions allow users recalibrate model predictions (please refer MiceExtVal::calculate_predictions_recalibrated_type_1() MiceExtVal::calculate_predictions_recalibrated_type_2() documentation detailed information recalibration works). () Type 1 recalibration (b) Type 2 recalibration Figure 2: Framingham recalibrated calibration plots men () Type 1 recalibration (b) Type 2 recalibration Figure 3: Framingham recalibrated calibration plots women Type 1 type 2 recalibration consecutive, just two different approaches problem. show Figure 2, Figure 3 obtain similar results. recalibration also changes Brier score results shown Table 8. Table 8: Brier score results recalibrated data () Type 1 recalibration (b) Type 2 recalibration","code":"men_formula <- anychd_surv ~ 0.0483 * (age - 48.3) +   0.4284 * (diabetes - 0.05) + 0.5234 * (cursmoke - 0.403) -   0.6595 * (totchol_less_160 - 0.075) + 0.1769 * (totchol_200_239 - 0.39) +   0.5054 * (totchol_240_279 - 0.165) + 0.6571 * (totchol_greater_280 - 0.057) +   0.4974 * (hdl_less_35 - 0.192) + 0.2431 * (hdl_35_44 - 0.357) -   0.0511 * (hdl_50_59 - 0.19) - 0.4866 * (hdl_greater_60 - 0.106) -   0.0023 * (bp_optimal - 0.202) + 0.2832 * (bp_high_normal - 0.202) +   0.5217 * (bp_hypertension_i - 0.225) +   0.6186 * (bp_hypertension_ii_iv - 0.128) men_model <- MiceExtVal::mv_model_cox(   formula = men_formula,   S0 = 0.9002 ) women_formula <- anychd_surv ~ 0.3377 * (age - 49.6) -   0.0027 * (age2 - 2604.5) + 0.5963 * (diabetes - 0.038) +   0.2925 * (cursmoke - 0.378) + -0.2614 * (totchol_less_160 - 0.079) +   0.2077 * (totchol_200_239 - 0.327) + 0.2439 * (totchol_240_279 - 0.2) +   0.5351 * (totchol_greater_280 - 0.91) + 0.8431 * (hdl_less_35 - 0.043) +   0.378 * (hdl_35_44 - 0.149) + 0.1978 * (hdl_45_49 - 0.124) -   0.4295 * (hdl_greater_60 - 0.407) - 0.5336 * (bp_optimal - 0.348) -   0.0677 * (bp_high_normal - 0.15) + 0.2629 * (bp_hypertension_i - 0.186) +   0.4657 * (bp_hypertension_ii_iv - 0.1) women_model <- MiceExtVal::mv_model_cox(   formula = women_formula,   S0 = 0.9625 ) men_fram_long <- fram_long |> dplyr::filter(sex == 1) women_fram_long <- fram_long |> dplyr::filter(sex == 2) men_model <- men_model |>   MiceExtVal::calculate_predictions(data = men_fram_long)  women_model <- women_model |>   MiceExtVal::calculate_predictions(data = women_fram_long) men_model <- men_model |>   MiceExtVal::calculate_harrell_c_index(data = men_fram_long)  women_model <- women_model |>   MiceExtVal::calculate_harrell_c_index(data = women_fram_long)  dplyr::bind_rows(men_model[[\"c_index\"]], women_model[[\"c_index\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3) men_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = men_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot()  women_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = women_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot() men_model <- men_model |>   MiceExtVal::calculate_brier_score(     data = men_fram_long, type = \"predictions_aggregated\", n_boot = 100   )  women_model <- women_model |>   MiceExtVal::calculate_brier_score(     data = women_fram_long, type = \"predictions_aggregated\", n_boot = 100   ) dplyr::bind_rows(men_model[[\"brier_score\"]], women_model[[\"brier_score\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3) men_model <- men_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(data = men_fram_long) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(data = men_fram_long)  men_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = men_fram_long,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot()  men_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = men_fram_long,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot() women_model <- women_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(data = women_fram_long) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(     data = women_fram_long   )  women_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = women_fram_long,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot()  women_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = women_fram_long,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot() men_model <- men_model |>   MiceExtVal::calculate_brier_score(     data = men_fram_long, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = men_fram_long, type = \"predictions_recal_type_2\", n_boot = 100   )  women_model <- women_model |>   MiceExtVal::calculate_brier_score(     data = women_fram_long, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = women_fram_long, type = \"predictions_recal_type_2\", n_boot = 100   )  dplyr::bind_rows(men_model[[\"brier_score_type_1\"]], women_model[[\"brier_score_type_1\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3) dplyr::bind_rows(men_model[[\"brier_score_type_2\"]], women_model[[\"brier_score_type_2\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"generate-the-models","dir":"Articles","previous_headings":"","what":"Generate the Models","title":"Example Of Use With Survival Outcome","text":"MiceExtVal package, models defined using specialized constructors depending outcome type: use MiceExtVal::mv_model_cox() Cox proportional hazards models MiceExtVal::mv_model_logreg() logistic regression models. Since Framingham model survival model based Cox framework, use MiceExtVal::mv_model_cox() example. define Cox model external validation, following key components must provided: formula: formula specifying structure model. includes predictor variables coefficients. original model developed centered variables, formula reflect subtracting corresponding means correctly compute linear predictor (\\(\\beta \\cdot X\\)). S0: baseline survival probability \\(S_0(t)\\) specific time point \\(t\\). Framingham model, predictions made 10 years, use \\(S_0(10 \\text{ years})\\) provided original publication. Framingham model stratified sex, define validate two separate models—one men one women—corresponding formula baseline survival value. next code snippet generates men model formula following original mean values coefficients described previous tables. defined needed parameters model can create model follows. women can reproduce already done men. previous parameters generate women_model externally validate Framingham women model.","code":"men_formula <- anychd_surv ~ 0.0483 * (age - 48.3) +   0.4284 * (diabetes - 0.05) + 0.5234 * (cursmoke - 0.403) -   0.6595 * (totchol_less_160 - 0.075) + 0.1769 * (totchol_200_239 - 0.39) +   0.5054 * (totchol_240_279 - 0.165) + 0.6571 * (totchol_greater_280 - 0.057) +   0.4974 * (hdl_less_35 - 0.192) + 0.2431 * (hdl_35_44 - 0.357) -   0.0511 * (hdl_50_59 - 0.19) - 0.4866 * (hdl_greater_60 - 0.106) -   0.0023 * (bp_optimal - 0.202) + 0.2832 * (bp_high_normal - 0.202) +   0.5217 * (bp_hypertension_i - 0.225) +   0.6186 * (bp_hypertension_ii_iv - 0.128) men_model <- MiceExtVal::mv_model_cox(   formula = men_formula,   S0 = 0.9002 ) women_formula <- anychd_surv ~ 0.3377 * (age - 49.6) -   0.0027 * (age2 - 2604.5) + 0.5963 * (diabetes - 0.038) +   0.2925 * (cursmoke - 0.378) + -0.2614 * (totchol_less_160 - 0.079) +   0.2077 * (totchol_200_239 - 0.327) + 0.2439 * (totchol_240_279 - 0.2) +   0.5351 * (totchol_greater_280 - 0.91) + 0.8431 * (hdl_less_35 - 0.043) +   0.378 * (hdl_35_44 - 0.149) + 0.1978 * (hdl_45_49 - 0.124) -   0.4295 * (hdl_greater_60 - 0.407) - 0.5336 * (bp_optimal - 0.348) -   0.0677 * (bp_high_normal - 0.15) + 0.2629 * (bp_hypertension_i - 0.186) +   0.4657 * (bp_hypertension_ii_iv - 0.1) women_model <- MiceExtVal::mv_model_cox(   formula = women_formula,   S0 = 0.9625 )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"men","dir":"Articles","previous_headings":"External Validation","what":"Men","title":"Example Of Use With Survival Outcome","text":"next code snippet generates men model formula following original mean values coefficients described previous tables. defined needed parameters model can create model follows.","code":"men_formula <- anychd_surv ~ 0.0483 * (age - 48.3) +   0.4284 * (diabetes - 0.05) + 0.5234 * (cursmoke - 0.403) -   0.6595 * (totchol_less_160 - 0.075) + 0.1769 * (totchol_200_239 - 0.39) +   0.5054 * (totchol_240_279 - 0.165) + 0.6571 * (totchol_greater_280 - 0.057) +   0.4974 * (hdl_less_35 - 0.192) + 0.2431 * (hdl_35_44 - 0.357) -   0.0511 * (hdl_50_59 - 0.19) - 0.4866 * (hdl_greater_60 - 0.106) -   0.0023 * (bp_optimal - 0.202) + 0.2832 * (bp_high_normal - 0.202) +   0.5217 * (bp_hypertension_i - 0.225) +   0.6186 * (bp_hypertension_ii_iv - 0.128) men_model <- MiceExtVal::mv_model_cox(   formula = men_formula,   S0 = 0.9002 )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"women","dir":"Articles","previous_headings":"External Validation","what":"Women","title":"Example Of Use With Survival Outcome","text":"women can reproduce already done men. previous parameters generate women_model externally validate Framingham women model.","code":"women_formula <- anychd_surv ~ 0.3377 * (age - 49.6) -   0.0027 * (age2 - 2604.5) + 0.5963 * (diabetes - 0.038) +   0.2925 * (cursmoke - 0.378) + -0.2614 * (totchol_less_160 - 0.079) +   0.2077 * (totchol_200_239 - 0.327) + 0.2439 * (totchol_240_279 - 0.2) +   0.5351 * (totchol_greater_280 - 0.91) + 0.8431 * (hdl_less_35 - 0.043) +   0.378 * (hdl_35_44 - 0.149) + 0.1978 * (hdl_45_49 - 0.124) -   0.4295 * (hdl_greater_60 - 0.407) - 0.5336 * (bp_optimal - 0.348) -   0.0677 * (bp_high_normal - 0.15) + 0.2629 * (bp_hypertension_i - 0.186) +   0.4657 * (bp_hypertension_ii_iv - 0.1) women_model <- MiceExtVal::mv_model_cox(   formula = women_formula,   S0 = 0.9625 )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"generate-stratified-datasets","dir":"Articles","previous_headings":"","what":"Generate Stratified Datasets","title":"Example Of Use With Survival Outcome","text":"Framingham model defined stratified model need generate stratified datasets. model results must calculated respective subcohort dataset. obtain subcohorts simply filter data genders generate men_fram_long women_fram_long variables.","code":"men_fram_long <- fram_long |> dplyr::filter(sex == 1) women_fram_long <- fram_long |> dplyr::filter(sex == 2)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"external-validation-results","dir":"Articles","previous_headings":"","what":"External Validation Results","title":"Example Of Use With Survival Outcome","text":"’ve defined Framingham model using MiceExtVal package, can proceed perform external validation. functions package organized two main categories: Functions calculate predictions results based model definition begin calculate_. Functions obtain external validation results begin get_. external validation process can divided three main phases: Calculate Predictions: step involves generating predicted risk scores individuals validation cohort. Calculate Recalibrations: necessary, recalibration model performed adjust systematic differences derivation validation cohorts. Obtain External Validation Results: final step generates validation metrics, discrimination calibration, assess model’s performance external dataset.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"calculate-the-predictions","dir":"Articles","previous_headings":"","what":"Calculate the predictions","title":"Example Of Use With Survival Outcome","text":"executing MiceExtVal::calculate_predictions(), model object updated additional information derived imputed dataset. Specifically, predicted probabilities computed imputation stored within model. addition, function calculates aggregated predictions patient pooling results across imputations. example values shown Table 4. Table 4: Men Framingham model predictions () Aggregated predictions (b) Model predictions imputation Beyond predicted probabilities, model object also includes prognostic indexes (\\(\\beta \\cdot X\\)), individual imputation level pooled estimates. Table 5 presents values. Table 5: Men Framingham model Beta X () Aggregated Beta X (b) Model Beta X imputation","code":"men_model <- men_model |>   MiceExtVal::calculate_predictions(data = men_fram_long)  women_model <- women_model |>   MiceExtVal::calculate_predictions(data = women_fram_long)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"model-performance","dir":"Articles","previous_headings":"","what":"Model Performance","title":"Example Of Use With Survival Outcome","text":"model performance can separated two. ability model discriminate high-risk patients low-risk patients calibration .e. ability match real risk predicted risk. package provides different functions depending type outcome model externally validated. case externally validating Cox model use functions associated model survival outcome. model discrimination ability calculated C-index AUC. package provides users two functions, MiceExtVal::calculate_auc() AUC calculation MiceExtVal::calculate_harrell_c_index() calculates Harrell C-Index. functions require model predictions already calculated. case externally validating Cox model, can calculate C-Index models using MiceExtVal::calculate_harrell_c_index() function. Table 6: C-Index results article also show recalibrate model two techniques provided package. recalibration predictions modify value C-Index predictions modified using parameters recalibration. variable modified equally order predictions modified therefore C-Index remains unchanged. calibration plots help users visualize accurate model predictions observed risks. calculate calibration plots mandatory calculated model predictions recalibration needed. package provides user functions allow generate calibration plots. calibration plot calculation divided two steps, first step calculates data observed predicted risks represented. observed risk can calculated different ways, package defined two function allow users calculate . MiceExtVal::get_calibration_plot_data_surv() function calculates observed risk Kaplan-Meier estimator MiceExtVal::get_calibration_plot_data_prop() function calculates observed risk proportion events. data calibration plot can generated using MiceExtVal::get_calibration_plot() function. following code snippet shows calculate calibration plots Framingham models. () Men (b) Women Figure 1: Framingham original predictions calibration plots calibration plots ggplot object can modified plot ggplot2 package. Feel free modify match requirements. Brier score statistic measure accuracy predicted riska observed outcome. survival analysis observed risk patients. Neverteless can assume outcome dichotomous calculate Brier score type outcome. statistic calculated : \\[ BS = \\frac{1}{N}\\sum^N_{t = 1}(f_t - o_t)^2 \\] \\(N\\) size population, \\(f_t\\) model prediction patient \\(t\\) \\(o_t\\) observed risk patient \\(t\\) case \\(0\\) suffer event \\(1\\) otherwise. MiceExtVal package developed function MiceExtVal::calculate_brier_score help users calculate model brier score. Table 7: Brier score results Table 7 represented brier score results models. important remark comparable calculated different subcohorts framingham complete cohort.","code":"men_model <- men_model |>   MiceExtVal::calculate_harrell_c_index(data = men_fram_long)  women_model <- women_model |>   MiceExtVal::calculate_harrell_c_index(data = women_fram_long)  dplyr::bind_rows(men_model[[\"c_index\"]], women_model[[\"c_index\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3) men_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = men_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot()  women_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = women_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot() men_model <- men_model |>   MiceExtVal::calculate_brier_score(     data = men_fram_long, type = \"predictions_aggregated\", n_boot = 100   )  women_model <- women_model |>   MiceExtVal::calculate_brier_score(     data = women_fram_long, type = \"predictions_aggregated\", n_boot = 100   ) dplyr::bind_rows(men_model[[\"brier_score\"]], women_model[[\"brier_score\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"calculating-c-index","dir":"Articles","previous_headings":"External Validation","what":"Calculating C-Index","title":"Example Of Use With Survival Outcome","text":"model discrimination ability calculated C-index AUC. package provides users two functions, MiceExtVal::calculate_auc() AUC calculation MiceExtVal::calculate_harrell_c_index() calculates Harrell C-Index. functions require model predictions already calculated. case externally validating Cox model, can calculate C-Index models using MiceExtVal::calculate_harrell_c_index() function. Table 6: C-Index results article also show recalibrate model two techniques provided package. recalibration predictions modify value C-Index predictions modified using parameters recalibration. variable modified equally order predictions modified therefore C-Index remains unchanged.","code":"men_model <- men_model |>   MiceExtVal::calculate_harrell_c_index(data = men_fram_long)  women_model <- women_model |>   MiceExtVal::calculate_harrell_c_index(data = women_fram_long)  dplyr::bind_rows(men_model[[\"c_index\"]], women_model[[\"c_index\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"calculating-calibration-plot","dir":"Articles","previous_headings":"External Validation","what":"Calculating Calibration Plot","title":"Example Of Use With Survival Outcome","text":"calibration plots help users visualize accurate model predictions observed risks. calculate calibration plots mandatory calculated model predictions recalibration needed. package provides user functions allow generate calibration plots. calibration plot calculation divided two steps, first step calculates data observed predicted risks represented. observed risk can calculated different ways, package defined two function allow users calculate . MiceExtVal::get_calibration_plot_data_surv() function calculates observed risk Kaplan-Meier estimator MiceExtVal::get_calibration_plot_data_prop() function calculates observed risk proportion events. data calibration plot can generated using MiceExtVal::get_calibration_plot() function. following code snippet shows calculate calibration plots Framingham models. () Men (b) Women Figure 1: Framingham original predictions calibration plots calibration plots ggplot object can modified plot ggplot2 package. Feel free modify match requirements.","code":"men_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = men_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot()  women_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = women_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot()"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"calculation-brier-score","dir":"Articles","previous_headings":"External Validation","what":"Calculation Brier Score","title":"Example Of Use With Survival Outcome","text":"Brier score statistic measure accuracy predicted riska observed outcome. survival analysis observed risk patients. Neverteless can assume outcome dichotomous calculate Brier score type outcome. statistic calculated : \\[ BS = \\frac{1}{N}\\sum^N_{t = 1}(f_t - o_t)^2 \\] \\(N\\) size population, \\(f_t\\) model prediction patient \\(t\\) \\(o_t\\) observed risk patient \\(t\\) case \\(0\\) suffer event \\(1\\) otherwise. MiceExtVal package developed function MiceExtVal::calculate_brier_score help users calculate model brier score. Table 7: Brier score results Table 7 represented brier score results models. important remark comparable calculated different subcohorts framingham complete cohort.","code":"men_model <- men_model |>   MiceExtVal::calculate_brier_score(     data = men_fram_long, type = \"predictions_aggregated\", n_boot = 100   )  women_model <- women_model |>   MiceExtVal::calculate_brier_score(     data = women_fram_long, type = \"predictions_aggregated\", n_boot = 100   ) dplyr::bind_rows(men_model[[\"brier_score\"]], women_model[[\"brier_score\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"recalibration","dir":"Articles","previous_headings":"","what":"Recalibration","title":"Example Of Use With Survival Outcome","text":"validating model external cohort common model predictions match observed risks new cohort. minimize problem developed two functions allow users recalibrate model predictions (please refer MiceExtVal::calculate_predictions_recalibrated_type_1() MiceExtVal::calculate_predictions_recalibrated_type_2() documentation detailed information recalibration works). () Type 1 recalibration (b) Type 2 recalibration Figure 2: Framingham recalibrated calibration plots men () Type 1 recalibration (b) Type 2 recalibration Figure 3: Framingham recalibrated calibration plots women Type 1 type 2 recalibration consecutive, just two different approaches problem. show Figure 2, Figure 3 obtain similar results. recalibration also changes Brier score results shown Table 8. Table 8: Brier score results recalibrated data () Type 1 recalibration (b) Type 2 recalibration","code":"men_model <- men_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(data = men_fram_long) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(data = men_fram_long)  men_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = men_fram_long,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot()  men_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = men_fram_long,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot() women_model <- women_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(data = women_fram_long) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(     data = women_fram_long   )  women_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = women_fram_long,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot()  women_model |>   MiceExtVal::get_calibration_plot_data_surv(     data = women_fram_long,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot() men_model <- men_model |>   MiceExtVal::calculate_brier_score(     data = men_fram_long, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = men_fram_long, type = \"predictions_recal_type_2\", n_boot = 100   )  women_model <- women_model |>   MiceExtVal::calculate_brier_score(     data = women_fram_long, type = \"predictions_recal_type_1\", n_boot = 100   ) |>   MiceExtVal::calculate_brier_score(     data = women_fram_long, type = \"predictions_recal_type_2\", n_boot = 100   )  dplyr::bind_rows(men_model[[\"brier_score_type_1\"]], women_model[[\"brier_score_type_1\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3) dplyr::bind_rows(men_model[[\"brier_score_type_2\"]], women_model[[\"brier_score_type_2\"]]) |>   tibble::add_column(Model = c(\"Men\", \"Women\"), .before = \"Estimate\") |>   kableExtra::kbl(digits = 3)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"comparing-results","dir":"Articles","previous_headings":"","what":"Comparing results","title":"Example Of Use With Survival Outcome","text":"External validations normally performed compare different model performances among certain cohort. MiceExtVal package also provides users functions allow compare results different models. order compare two model calibration plots developed functions MiceExtval::get_stratified_calibration_plot_surv() MiceExtval::get_stratified_calibration_plot_prop() allow user plot stratified calibration plots. Accordingly individual calibration plots use function MiceExtval::get_stratified_calibration_plot_surv() generate stratified calibration plot. case interesting plot men women calibrations plot, shown Figure 4. function takes three arguments list models arguments. external validation data (e.g., fram_long) number groups type prediction (either recalibrated original predictions) list models compare (case, men_model women_model). allow function overlay calibration plots models figure, facilitating direct comparison. () Original predictions (b) Type 1 recalibration (c) Type 2 recalibration Figure 4: Framingham stratified sex calibration plots Note pass entire imputed dataset (fram_long) argument, even though model stores results respective subcohort (men women). necessary function needs access full dataset order correctly extract process relevant subcohort model. function uses subcohort specified model (e.g., men_model men) calculate appropriate calibration data generate corresponding calibration plots. passing complete dataset, function ensures stratified calibration plots generated correctly, comparing models’ calibration context full cohort’s distribution characteristics. MiceExtVal package also includes functionality generating forest plot compare discrimination abilities different models. example, visualize Harrell C-Index, package also allows comparison AUC (Area Curve) dichotomous outcomes. forest plot generation process split two steps: Data preparation: first step generates data used forest plot. Forest plot creation: second step generates actual plot prepared data. compare different models, can stratify results binding data different subgroups (e.g., men women patients). Models share name across subgroups merged final forest plot, making easy compare performance model different groups. following example, generate two separate strata model, TIMI-II, one men one women, pass strata forest plot function. Figure 5: Forestplot stratified want generate forestplot multiple models one strat can generate following example. example men women models inserted Overall strat individual models. deleted legend informative. Figure 6: Forestplot non-stratified forestplot functions also allow us generate data Brier score results. next code snippet generates forestplot compares different Brier score model. Figure 7: Forestplot Brier score comparison","code":"MiceExtVal::get_stratified_calibration_plot_surv(   data = fram_long,   n_groups = 10,   type = \"predictions_aggregated\",   Men = men_model,   Women = women_model )  MiceExtVal::get_stratified_calibration_plot_surv(   data = fram_long,   n_groups = 10,   type = \"predictions_recal_type_1\",   Men = men_model,   Women = women_model )  MiceExtVal::get_stratified_calibration_plot_surv(   data = fram_long,   n_groups = 10,   type = \"predictions_recal_type_2\",   Men = men_model,   Women = women_model ) dplyr::bind_rows(   MiceExtVal::get_forestplot_data(strat = \"Men\", type = \"c_index\", Framingham = men_model),   MiceExtVal::get_forestplot_data(strat = \"Women\", type = \"c_index\", Framingham = women_model) ) |>   MiceExtVal::get_forestplot(center = 0.7, digits = 2, table = TRUE) +   ggplot2::xlim(c(0.6, 0.75)) fp <- MiceExtVal::get_forestplot_data(   strat = \"Overall\",   type = \"c_index\",   `Framingham Women` = women_model,   `Framingham Men` = men_model ) |>   MiceExtVal::get_forestplot(center = 0.7, digits = 2, table = TRUE)  fp[[2]] <- fp[[2]] +   ggplot2::theme(legend.position = \"none\") +   ggplot2::xlim(c(0.6, 0.75))  plot(fp) data <- dplyr::bind_rows(   MiceExtVal::get_forestplot_data(     strat = \"Original\", type = \"brier_score\",     Men = men_model, Women = women_model   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 1 recalibration\", type = \"brier_score_type_1\",     Men = men_model, Women = women_model   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 2 recalibration\", type = \"brier_score_type_2\",     Men = men_model, Women = women_model   ), )  data |>   MiceExtVal::get_forestplot(center = mean(data[[\"estimate\"]]), digits = 2, table = TRUE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"calibration-comparison-stratified-calibration-plots","dir":"Articles","previous_headings":"Comparing results","what":"Calibration Comparison: Stratified Calibration Plots","title":"Example Of Use With Survival Outcome","text":"order compare two model calibration plots developed functions MiceExtval::get_stratified_calibration_plot_surv() MiceExtval::get_stratified_calibration_plot_prop() allow user plot stratified calibration plots. Accordingly individual calibration plots use function MiceExtval::get_stratified_calibration_plot_surv() generate stratified calibration plot. case interesting plot men women calibrations plot, shown Figure 4. function takes three arguments list models arguments. external validation data (e.g., fram_long) number groups type prediction (either recalibrated original predictions) list models compare (case, men_model women_model). allow function overlay calibration plots models figure, facilitating direct comparison. () Original predictions (b) Type 1 recalibration (c) Type 2 recalibration Figure 4: Framingham stratified sex calibration plots Note pass entire imputed dataset (fram_long) argument, even though model stores results respective subcohort (men women). necessary function needs access full dataset order correctly extract process relevant subcohort model. function uses subcohort specified model (e.g., men_model men) calculate appropriate calibration data generate corresponding calibration plots. passing complete dataset, function ensures stratified calibration plots generated correctly, comparing models’ calibration context full cohort’s distribution characteristics.","code":"MiceExtVal::get_stratified_calibration_plot_surv(   data = fram_long,   n_groups = 10,   type = \"predictions_aggregated\",   Men = men_model,   Women = women_model )  MiceExtVal::get_stratified_calibration_plot_surv(   data = fram_long,   n_groups = 10,   type = \"predictions_recal_type_1\",   Men = men_model,   Women = women_model )  MiceExtVal::get_stratified_calibration_plot_surv(   data = fram_long,   n_groups = 10,   type = \"predictions_recal_type_2\",   Men = men_model,   Women = women_model )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"discrimination-comparison-forestplot","dir":"Articles","previous_headings":"Comparing results","what":"Discrimination Comparison: Forestplot","title":"Example Of Use With Survival Outcome","text":"MiceExtVal package also includes functionality generating forest plot compare discrimination abilities different models. example, visualize Harrell C-Index, package also allows comparison AUC (Area Curve) dichotomous outcomes. forest plot generation process split two steps: Data preparation: first step generates data used forest plot. Forest plot creation: second step generates actual plot prepared data. compare different models, can stratify results binding data different subgroups (e.g., men women patients). Models share name across subgroups merged final forest plot, making easy compare performance model different groups. following example, generate two separate strata model, TIMI-II, one men one women, pass strata forest plot function. Figure 5: Forestplot stratified want generate forestplot multiple models one strat can generate following example. example men women models inserted Overall strat individual models. deleted legend informative. Figure 6: Forestplot non-stratified","code":"dplyr::bind_rows(   MiceExtVal::get_forestplot_data(strat = \"Men\", type = \"c_index\", Framingham = men_model),   MiceExtVal::get_forestplot_data(strat = \"Women\", type = \"c_index\", Framingham = women_model) ) |>   MiceExtVal::get_forestplot(center = 0.7, digits = 2, table = TRUE) +   ggplot2::xlim(c(0.6, 0.75)) fp <- MiceExtVal::get_forestplot_data(   strat = \"Overall\",   type = \"c_index\",   `Framingham Women` = women_model,   `Framingham Men` = men_model ) |>   MiceExtVal::get_forestplot(center = 0.7, digits = 2, table = TRUE)  fp[[2]] <- fp[[2]] +   ggplot2::theme(legend.position = \"none\") +   ggplot2::xlim(c(0.6, 0.75))  plot(fp)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started-surv.html","id":"brier-score-comparison-forestplot","dir":"Articles","previous_headings":"Comparing results","what":"Brier Score Comparison: Forestplot","title":"Example Of Use With Survival Outcome","text":"forestplot functions also allow us generate data Brier score results. next code snippet generates forestplot compares different Brier score model. Figure 7: Forestplot Brier score comparison","code":"data <- dplyr::bind_rows(   MiceExtVal::get_forestplot_data(     strat = \"Original\", type = \"brier_score\",     Men = men_model, Women = women_model   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 1 recalibration\", type = \"brier_score_type_1\",     Men = men_model, Women = women_model   ),   MiceExtVal::get_forestplot_data(     strat = \"Type 2 recalibration\", type = \"brier_score_type_2\",     Men = men_model, Women = women_model   ), )  data |>   MiceExtVal::get_forestplot(center = mean(data[[\"estimate\"]]), digits = 2, table = TRUE)"},{"path":[]},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Asier Ballesteros Domínguez. Author, maintainer.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ballesteros Domínguez (2025). MiceExtVal: Tools external validation Multiple Imputation Chained Equations methodology. R package version 0.0.2, https://metodologianavarrabiomed.github.io/mice-ext-val.","code":"@Manual{,   title = {MiceExtVal: Tools for external validation in Multiple Imputation by Chained Equations methodology},   author = {Asier {Ballesteros Domínguez}},   year = {2025},   note = {R package version 0.0.2},   url = {https://metodologianavarrabiomed.github.io/mice-ext-val}, }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"miceextval","dir":"","previous_headings":"","what":"Tools for external validation in Multiple Imputation by Chained Equations methodology","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"External model validation necessary step implementation risk prediction models real life situations. overabundance models really tested environments development. aknowledge model perform properly different environments need perform external validations . Simultanously, majority availabe datasets external validation come electronic health records (EHR) resulting datasets missing information. One recommended techniques reduce BIAS produced missing values multiple imputation. package MiceExtVal helps create workflows externally validate logistic regression Cox models among multiple imputed dataset. package helps users generate multiple imputation workflow properly maintaining common syntax models.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"can install development version MiceExtVal GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"metodologianavarrabiomed/mice-ext-val\")  # alternativelly you can use the `pak` package # install.packages(\"pak\") pak::pkg_install(\"metodologianavarrabiomed/mice-ext-val\")"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/MiceExtVal-package.html","id":null,"dir":"Reference","previous_headings":"","what":"MiceExtVal — MiceExtVal-package","title":"MiceExtVal — MiceExtVal-package","text":"package allows user externally validate Cox Logistic Regression models data usually reported articles. package formed functions allow user recalibrate models also obtain discrimination calibration performance working multiple imputed data. learn MiceExtVal, recommend start webpage article https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","code":""},{"path":[]},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/MiceExtVal-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MiceExtVal — MiceExtVal-package","text":"Maintainer: Asier Ballesteros Domínguez asier.ballesteros.dominguez@navarra.es (ORCID)","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_auc.html","id":null,"dir":"Reference","previous_headings":"","what":"calculates the area under the curve for the given model — calculate_auc","title":"calculates the area under the curve for the given model — calculate_auc","text":"function calculates Area Curve value given model. uses pROC::auc() function pROC package.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_auc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculates the area under the curve for the given model — calculate_auc","text":"","code":"calculate_auc(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_auc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculates the area under the curve for the given model — calculate_auc","text":"model model generated function mv_model_cox() mv_model_logreg() data Multiple imputed data organized long dataset .progress TRUE render progress bar FALSE otherwise","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_auc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculates the area under the curve for the given model — calculate_auc","text":"model passed parameter Harrell C Index value stored $auc","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_auc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculates the area under the curve for the given model — calculate_auc","text":"","code":"if (FALSE) { # \\dontrun{ calculate_auc(model, data) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_brier_score.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate the brier score for the given model definition — calculate_brier_score","title":"calculate the brier score for the given model definition — calculate_brier_score","text":"Brier Score calculated using formula $$BS=\\frac{1}{n}\\sum_{t=1}^n{(f_t - o_t)^2}$$ \\(n\\) population size, \\(f_t\\) predictions row \\(t\\) \\(o_t\\) dichotomous observation row \\(t\\). function works accordingly model definition. model defined Cox, survival variable transformed dichotomous 1 event appeared follow 0 othercase. case model logistic regression dependent variable can already dichotomous survival, case survival variable dichotomous defined Cox model. confidence interval calculated bootstrap resamples.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_brier_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate the brier score for the given model definition — calculate_brier_score","text":"","code":"calculate_brier_score(   model,   data,   type = c(\"predictions_aggregated\", \"predictions_recal_type_1\",     \"predictions_recal_type_2\"),   n_boot = 1000,   seed = NULL )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_brier_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate the brier score for the given model definition — calculate_brier_score","text":"model Model generated mv_model_cox() mv_model_logreg(). Needs expected prediction parameter already calculated model. generate predictions must use function/s calculate_predictions(), calculate_predictions_recalibrated_type_1() calculate_predictions_recalibrated_type_2() data Data observed predictions calculated. type Type predictions calibration plot data generated : \"predictions_aggregated\", \"predictions_recal_type_1\" \"predictions_recal_type_2\" n_boot number bootstrap resamples calculate Brier Score standar error. seed random seed generator","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_brier_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"calculate the brier score for the given model definition — calculate_brier_score","text":"","code":"if (FALSE) { # \\dontrun{ model |>   calculate_brier_score(data, type = \"predictions_aggregated\") } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_harrell_c_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Harrell C-Index for a model — calculate_harrell_c_index","title":"Calculates Harrell C-Index for a model — calculate_harrell_c_index","text":"function calculates Harrell C Index value model imputed dataset stored data long dataset. Harrell's C Index calculation realized using Hmisc::rcorr.cens function Harrell's package Hmisc. calculating index imputed dataset aggregates using rubin rules psfmi::pool_RR function Heymans' package psfmi. Finally, stores result inside c_index attribute model.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_harrell_c_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Harrell C-Index for a model — calculate_harrell_c_index","text":"","code":"calculate_harrell_c_index(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_harrell_c_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Harrell C-Index for a model — calculate_harrell_c_index","text":"model model generated function mv_model_cox() mv_model_logreg() data Multiple imputation data organized long dataset .progress TRUE render progress bar FALSE otherwise","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_harrell_c_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Harrell C-Index for a model — calculate_harrell_c_index","text":"model passed parameter Harrell C Index value stored $c_index","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_harrell_c_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Harrell C-Index for a model — calculate_harrell_c_index","text":"F. E. Harrell, “Harrell Miscellaneous (R package Hmisc version 5.1-1),” R-project.org, Sep. 2023, doi: https://cran.r-project.org/package=Hmisc. M. Heymans, “Prediction Model Pooling, Selection Performance Evaluation Across Multiply Imputed Datasets (R package psfmi version 1.4.0),” R-project.org, Jun. 2023, doi: https://cran.r-project.org/package=psfmi.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_harrell_c_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Harrell C-Index for a model — calculate_harrell_c_index","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)) )  model <- model |>   calculate_predictions(data) |>   calculate_harrell_c_index(data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the predictions for a Cox model — calculate_predictions.cox","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"Calculates predictions given Cox model external validation data. predictions calculated following definition cox model $$S_0(t)^{e^{(\\beta \\cdot X)}}$$ \\(S_0(t)\\) stands survival function time \\(t\\), \\(\\beta\\) stands model coefficients \\(X\\) stands centered values id.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"","code":"# S3 method for class 'cox' calculate_predictions(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"model Model generated mv_model_cox() data External validation data. Multiple imputation dataset long format. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"model parameters predictions_aggregated, predictions_data, betax betax_data populated. predictions_aggregated, stores predictions aggregated mean. predictions_data, stores predictions imputed datasets. betax, stores \\(\\beta \\cdot X\\) values aggregated mean. betax_data, stores \\(\\beta \\cdot X\\) values imputed datasets.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"","code":"set.seed(123)  model <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |> calculate_predictions(data) #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1     0.0131 #> 2     2     0.0106 #> 3     3     0.0105 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1    0.0137      1     1 #> 2    0.0129      1     2 #> 3    0.0102      1     3 #> 4    0.0124      2     1 #> 5    0.00995     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.0620 #> 2     2 -0.163  #> 3     3 -0.162  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.102       1     1 #> 2  0.0466      1     2 #> 3 -0.195       1     3 #> 4  0.00105     2     1 #> 5 -0.217       2     2"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the predictions for a model — calculate_predictions","title":"Calculate the predictions for a model — calculate_predictions","text":"generic method calculating predictions given model. parameters must passed S3 methods class (calculate_predictions.cox() calculate_predictions.logreg())","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the predictions for a model — calculate_predictions","text":"","code":"calculate_predictions(model, data, .progress = TRUE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the predictions for a model — calculate_predictions","text":"model model generated function mv_model_cox() mv_model_logreg() data Data parameter calculate_predictions.cox() calculate_predictions.logreg() .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the predictions for a model — calculate_predictions","text":"model parameters predictions_aggregated, predictions_data, betax betax_data populated.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the predictions for a model — calculate_predictions","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2))  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |> calculate_predictions(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.515 #> 2     2      0.460 #> 3     3      0.460 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.526     1     1 #> 2      0.512     1     2 #> 3      0.451     1     3 #> 4      0.500     2     1 #> 5      0.446     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.0620 #> 2     2 -0.163  #> 3     3 -0.162  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.102       1     1 #> 2  0.0466      1     2 #> 3 -0.195       1     3 #> 4  0.00105     2     1 #> 5 -0.217       2     2"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"Calculates predictions given logistic regression model external validation data. predictions logistic regression model calculated following next formula. $$p(X) = \\frac{1}{1 + e^{-(\\beta \\cdot X)}}$$ \\(X\\) stands covariable values \\(\\beta\\) coefficient values.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"","code":"# S3 method for class 'logreg' calculate_predictions(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"model Model generated mv_model_logreg() data External validation data. Multiple imputation dataset long format. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"model parameters predictions_aggregated, predictions_data, betax betax_data populated. predictions_aggregated, stores predictions aggregated mean. predictions_data, stores predictions imputed datasets. betax, stores \\(\\beta \\cdot X\\) values aggregated mean. betax_data, stores \\(\\beta \\cdot X\\) values imputed datasets.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"","code":"set.seed(123)  model <- mv_model_logreg(   formula = event ~ 0.5 * x + 0.3 * z + 1.2 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )   model |> calculate_predictions(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z + 1.2 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.914 #> 2     2      0.894 #> 3     3      0.894 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.917     1     1 #> 2      0.913     1     2 #> 3      0.891     1     3 #> 4      0.909     2     1 #> 5      0.889     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id betax #>   <dbl> <dbl> #> 1     1  2.36 #> 2     2  2.14 #> 3     3  2.14 #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>   betax  .imp    id #>   <dbl> <dbl> <dbl> #> 1  2.40     1     1 #> 2  2.35     1     2 #> 3  2.10     1     3 #> 4  2.30     2     1 #> 5  2.08     2     2"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"Using function get_recalibrate_param_type_1_cox() calculates recalibration parameters imputed datasets stored data. parameters estimated aggregates calculates recalibrated predictions aggregated parameters aggregated predictions.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"","code":"# S3 method for class 'cox' calculate_predictions_recalibrated_type_1(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"model Model generated mv_model_cox(). Needs predictions parameter model, generate function calculate_predictions() must executed model. data External validation data. Multiple imputation dataset long format. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"model parameter predictions_recal_type_1 alpha populated. predictions_recal_type_1: stores type 1 recalibrated predictions stored follows alpha: stores \\(\\alpha\\) recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"","code":"set.seed(123)  model <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765 #>  #> ── alpha ── #>  #> -Inf #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1     0.0145 #> 2     2     0.0135 #> 3     3     0.0123 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1     0.0104     1     1 #> 2     0.0158     1     2 #> 3     0.0162     1     3 #> 4     0.0136     2     1 #> 5     0.0129     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.129  #> 2     2  0.0805 #> 3     3 -0.0544 #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>     betax  .imp    id #>     <dbl> <dbl> <dbl> #> 1 -0.170      1     1 #> 2  0.247      1     2 #> 3  0.276      1     3 #> 4  0.0990     2     1 #> 5  0.0411     2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1                 0 #> 2     2                 0 #> 3     3                 0"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"generic method calculating type 1 recalibration predictions model.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"","code":"calculate_predictions_recalibrated_type_1(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"model Model recalibrated predictions calculated data Data parameter calculate_predictions_recalibrated_type_1.cox() function calculate_predictions_recalibrated_type_1.logreg() function. .progress .progress parameter calculate_predictions_recalibrated_type_1.cox() function calculate_predictions_recalibrated_type_1.logreg() function.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"model parameter predictions_recal_type_1 also recalibration parameters populated.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"Calculates type 1 recalibrated predictions logistic regression model. type 1 recalibration defined \\(\\alpha\\) parameter updates value intercept (\\(\\beta_0\\)) model. log-odds function rewritten follows. $$log(\\frac{p}{1 - p}) = \\alpha + \\beta_0 + \\beta_1 \\cdot X_1 + \\beta_2 \\cdot X_2 + \\dots + \\beta_p \\cdot X_p$$ Thus, predictions updated adjusting intercept value model external validation data. \\(\\alpha\\) parameter estimated imputed datasets deriving logistic regression model using model log-odds offset. coefficients models aggregated using mean. Using aggregated parameter aggregated log-odds new predictions calculated follows. $$\\frac{1}{1 + e^{(-(\\alpha + (\\beta \\cdot X)))}}$$","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"","code":"# S3 method for class 'logreg' calculate_predictions_recalibrated_type_1(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"model Model generated mv_model_logreg(). Needs predictions parameter model, generate function calculate_predictions must executed model. attribute must generated using calculate_predictions() data Data predictions must recalibrated. .progress TRUE render progress bar, FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"model parameters predictions_recal_type_1 alpha_type_1 populated. predictions_recal_type_1: stores type 1 recalibrated predictions follows alpha_type_1: stores \\(\\alpha\\) recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"function calculates type 2 recalibrated predictions Cox model. help recalibration model function get_recalibrate_params_type_2_cox() defined elsewhere package. Using auxiliar function recalibration parameters calculated imputed datasets stored data long dataset. estimating recalibration parameters imputed datasets aggregated mean use recalibrate predictions model. type 2 recalibration needs two parameters S0_type_2 beta_overall. parameters calculated get_recalibrate_params_type_2_cox() function. estimated, aggregated mean. Finally type 2 recalibration parameters aggregated predictions type 2 recalibrated predictions calculated. $$S_{0, \\text{type 2}}(t)^{exp(\\beta_{overall}(\\beta \\cdot X))}$$ \\(S_{0, \\text{type 2}}(t)\\) estimated using Weibull distribution \\(\\beta_{overall}\\) estimated deriving Cox model \\(\\beta \\cdot X\\) unique covariate. parameters estimated using get_recalibrate_params_type_2_cox() function.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"","code":"# S3 method for class 'cox' calculate_predictions_recalibrated_type_2(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"model Model generated mv_model_cox(). Needs predictions parameter model, generate function calculate_predictions() must executed model. data External validation data. Multiple imputation dataset long format. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"model parameter predictons_recalibrated_type_2, S0_type_2 beta_overall populated. predictions_recal_type_2: stores type 2 recalibrated predictions follows. S0_type_2: stores \\(S_{0, \\text{type 2}}(t)\\) type 2 recalibration parameter. beta_overall: stores \\(\\beta_{overall}\\) type 2 recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"","code":"set.seed(123)  model <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) |>   calculate_predictions_recalibrated_type_2(data) #> Warning: Ran out of iterations and did not converge #> Warning: Ran out of iterations and did not converge #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765 #>  #> ── alpha ── #>  #> -Inf #>  #> ── S0_type_2 ── #>  #> 0.828995910783699 #>  #> ── beta_overall ── #>  #> NA #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1     0.0145 #> 2     2     0.0135 #> 3     3     0.0123 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1     0.0104     1     1 #> 2     0.0158     1     2 #> 3     0.0162     1     3 #> 4     0.0136     2     1 #> 5     0.0129     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.129  #> 2     2  0.0805 #> 3     3 -0.0544 #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>     betax  .imp    id #>     <dbl> <dbl> <dbl> #> 1 -0.170      1     1 #> 2  0.247      1     2 #> 3  0.276      1     3 #> 4  0.0990     2     1 #> 5  0.0411     2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1                 0 #> 2     2                 0 #> 3     3                 0 #> ── predictions_recal_type_2 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_2 #>   <dbl>             <dbl> #> 1     1                NA #> 2     2                NA #> 3     3                NA"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"generic method calculating type 2 recalibration predictions given model.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"","code":"calculate_predictions_recalibrated_type_2(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"model Model recalibrated predictions calculated data Data parameter calculate_predictions_recalibrated_type_2.cox() function calculate_predictions_recalibrated_type_2.logreg() function .progress .progress parameter calculate_predictions_recalibrated_type_2.cox() function calculate_predictions_recalibrated_type_2.logreg() function","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"model parameter predictions_recal_type_2 also recalibration parameters populated.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) |>   calculate_predictions_recalibrated_type_2(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── alpha_type_2 ── #>  #> 155.926045685198 #>  #> ── beta_overall ── #>  #> 528.594440157522 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424 #> ── predictions_recal_type_2 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_2 #>   <dbl>             <dbl> #> 1     1              1    #> 2     2              1.00 #> 3     3              1.00"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"Calculates type 2 recalibrated predictions logistic regression model. type 2 recalibration uses two parameters update model predictions, \\(\\alpha\\) parameter allow update model intercept \\(\\beta_{overall}\\) parameter allow update importance log-odds (\\(\\beta \\cdot X\\)) values. log-odds function can rewritten $$log(\\frac{p}{1 - p}) = \\alpha + \\beta_{overall} \\cdot (\\beta_0 + \\beta_1 \\cdot X_1 + \\beta_2 \\cdot X_2 + \\dots + \\beta_p \\cdot X_p)$$ parameters estimated deriving logistic regression model imputations using model log-odds covariate. coefficients model represent parameter estimations aggregated using rubin rules. , recalibrated predictions calculated using parameters aggregated log-odds. $$\\frac{1}{1 + e^{(-(\\alpha + \\beta_{overall}(\\beta \\cdot X)))}}$$","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"","code":"# S3 method for class 'logreg' calculate_predictions_recalibrated_type_2(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"model Model generated mv_model_logreg(). Needs predictions parameter model, generate function calculate_predictions() must executed model. data Data predictions must recalibrated. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"model parameter predictons_recalibrated_type_2, S0_type_2 beta_overall populated. predictions_recal_type_2: stores type 2 recalibrated predictions follows. alpha_type_2: stores \\(\\alpha\\) type 2 recalibration parameter. beta_overall: stores \\(\\beta_{overall}\\) type 2 recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) |>   calculate_predictions_recalibrated_type_2(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── alpha_type_2 ── #>  #> 155.926045685198 #>  #> ── beta_overall ── #>  #> 528.594440157522 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424 #> ── predictions_recal_type_2 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_2 #>   <dbl>             <dbl> #> 1     1              1    #> 2     2              1.00 #> 3     3              1.00"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/framingham.html","id":null,"dir":"Reference","previous_headings":"","what":"An example dataset from the Framingham study — framingham","title":"An example dataset from the Framingham study — framingham","text":"example dataset Framingham study","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/framingham.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example dataset from the Framingham study — framingham","text":"","code":"data(framingham)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/framingham.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example dataset from the Framingham study — framingham","text":"data frame nine variables: randid id patient period period measure study sex sex patient age age patient totchol total cholesterol patient mg/dL hdlc hdl patient mg/dL ldlc ldl patient mg/dL sysbp systolic blood pressure patient mmHg diabp diastolic blood pressure patient mmHg cursmoke patient currently smoking diabetes patient diagnosed diabetes anychd patient suffered CHD event follow-timechd time follow patient dataset 11627 rows 13 variables details, see https://www.kaggle.com/datasets/shreyjain601/framingham-heart-study","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the calibration plot — get_calibration_plot","title":"Generates the calibration plot — get_calibration_plot","text":"Generates calibration plot data needed print . data generated get_calibration_plot_data_surv() get_calibration_plot_data_prop() functions.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the calibration plot — get_calibration_plot","text":"","code":"get_calibration_plot(data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the calibration plot — get_calibration_plot","text":"data Outcome get_calibration_plot_data_surv() get_calibration_plot_data_prop() functions.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the calibration plot — get_calibration_plot","text":"ggplot2 object ready plotted","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates the calibration plot — get_calibration_plot","text":"","code":"if (FALSE) { # \\dontrun{ model |>   get_calibration_plot_data_surv(data, 10, type = \"predictions_aggregated\") |>   get_calibration_plot()  model |>   get_calibration_plot_data_prop(data, 10, type = \"predictions_aggregated\") |>   get_calibration_plot() } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the data needed for the calibration plot — get_calibration_plot_data_prop","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_prop","text":"Generates data needed calibration plot. calibration plot needs separate model predictions risk groups. First function separates predictions n_groups computes mean value model predictions also observed value. observed value estimated value study time estimated using proportion events group.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_prop","text":"","code":"get_calibration_plot_data_prop(   model,   data,   n_groups,   type = \"predictions_aggregated\" )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_prop","text":"model Model generated mv_model_cox() mv_model_logreg(). Needs predictions parameter model, generate function calculate_predictions() must executed model. want obtain also recalibrated data model must initalize recalibrated predictions calculate_predictions_recalibrated_type_1() calculate_predictions_recalibrated_type_2(). data Data observed predictions calculated. n_groups Number groups must calculated. type Type predictions calibration plot data generated : \"predictions_aggregated\", \"predictions_recal_type_1\" \"predictions_recal_type_2\"","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_prop","text":"tibble data ready generate calibration plot.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_prop","text":"","code":"if (FALSE) { # \\dontrun{ model |>   get_calibration_plot_data_surv(data = test_data, n_groups = 10, type = \"predictions_aggregated\") } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the data needed for the calibration plot — get_calibration_plot_data_surv","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_surv","text":"Generates data needed calibration plot. calibration plot needs separate model predictions risk groups. First function separates predictions n_groups computes mean value model predictions also observed value. observed value estimated value study time estimated using Kaplan-Meier estimator.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_surv","text":"","code":"get_calibration_plot_data_surv(   model,   data,   n_groups,   type = \"predictions_aggregated\" )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_surv","text":"model Model generated mv_model_cox() mv_model_logreg(). Needs predictions parameter model, generate function calculate_predictions() must executed model. want obtain also recalibrated data model must initalize recalibrated predictions calculate_predictions_recalibrated_type_1() calculate_predictions_recalibrated_type_2(). data Data observed predictions calculated. n_groups Number groups must calculated. type Type predictions calibration plot data generated : \"predictions_aggregated\", \"predictions_recal_type_1\" \"predictions_recal_type_2\"","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_surv","text":"tibble data ready generate calibration plot.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data_surv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates the data needed for the calibration plot — get_calibration_plot_data_surv","text":"","code":"if (FALSE) { # \\dontrun{ model |>   get_calibration_plot_data_surv(data = test_data, n_groups = 10, type = \"predictions_aggregated\") } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Function that generates a C-Index forestplot for the given data — get_forestplot","title":"Function that generates a C-Index forestplot for the given data — get_forestplot","text":"Function generates C-Index forestplot given data","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function that generates a C-Index forestplot for the given data — get_forestplot","text":"","code":"get_forestplot(data, center, digits = 3, table = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function that generates a C-Index forestplot for the given data — get_forestplot","text":"data Dataset data plot stored. recommended generated using get_forestplot_data() center x intercept display stripped vertical line digits decimal digits table generation, default 3 table table displayed generating forestplot, default FALSE","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function that generates a C-Index forestplot for the given data — get_forestplot","text":"C-Index forestplot","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function that generates a C-Index forestplot for the given data — get_forestplot","text":"","code":"if (FALSE) { # \\dontrun{ get_forestplot(data, 0.5) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the forestplot data needed in get_forestplot() — get_forestplot_data","title":"Generates the forestplot data needed in get_forestplot() — get_forestplot_data","text":"Generates forestplot data needed get_forestplot()","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the forestplot data needed in get_forestplot() — get_forestplot_data","text":"","code":"get_forestplot_data(   strat,   type = c(\"c_index\", \"auc\", \"brier_score\", \"brier_score_type_1\", \"brier_score_type_2\"),   ... )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the forestplot data needed in get_forestplot() — get_forestplot_data","text":"strat Name strat models part type Choosen statistic plot. must already calculated ... list models plotted","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the forestplot data needed in get_forestplot() — get_forestplot_data","text":"tibble information needed generate forestplot","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_forestplot_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates the forestplot data needed in get_forestplot() — get_forestplot_data","text":"","code":"if (FALSE) { # \\dontrun{ data <- get_forestplot_data(strat = \"overall\", cox_model, logreg_model) data <- get_forestplot_data(strat = \"overall\", Cox = cox_model, LogReg = logreg_model) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"Obtains recalibration parameters following type 1 recalibration definition. Recalibrates predictions type 1 recalibration type 1 recalibration follows guidelines presented Crowson et al. (2016). recalibration follows next proposition obtain \\(\\alpha\\) parameter allow recalibrate predictions new validation dataset. recalibration adjusts incidence event known model new dataset. \\(\\alpha\\) value recalibration calculated difference survival basal function reported model mean value model predictions external validation cohort. $$\\alpha = S_{model}(t) - \\text{mean predictions}$$.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"","code":"get_recalibrate_param_type_1_cox(time, event, survival_predictions)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"time time follow patient, must time event patient suffers event , must logical survival_predictions survival predictions patients, must numeric","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"\\(\\alpha\\) value.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"C. S. Crowson, “Assessing calibration prognostic risk scores - Cynthia S Crowson, Elizabeth J Atkinson, Terry M Therneau, 2016,” Statistical Methods Medical Research, 2016. https://journals.sagepub.com/doi/10.1177/0962280213497434 (accessed Nov. 17, 2023).","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"","code":"if (FALSE) { # \\dontrun{ get_recalibrate_param_type_1_cox(data, s0) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"Calculates recalibration type 2 parameters recalibrate_data returns list two needed parameters \\(S_0(t)\\), survival estimation time \\(t\\) external validation data, \\(\\beta_{overall}\\), importance \\(\\beta \\cdot X\\) values external validation data. survival function estimation calculated Weibull distribution. Weibull model derived external validation cohort value estimated model time \\(t\\) used recalibration \\(S_0(t)\\). importance \\(\\beta \\cdot X\\) calculated deriving Cox model using covariate model \\(\\beta \\cdot X\\) values. derived Cox model coefficient used \\(\\beta_{overall}\\).","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"","code":"get_recalibrate_params_type_2_cox(time, event, betax)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"time time follow patient, must numeric event patient suffered event follow , must numeric \\(1\\) event \\(0\\) othercase betax betax values, \\(\\beta X\\), original predictions, must numeric","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"list two elements: S0: \\(S_0(t)\\) beta_overall: \\(\\beta_{overall}\\) value type 2 recalibration","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"","code":"if (FALSE) { # \\dontrun{ get_recalibrate_params_type_2_cox(data, betax, t) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_prop.html","id":null,"dir":"Reference","previous_headings":"","what":"generates an stratified calibration plot — get_stratified_calibration_plot_prop","title":"generates an stratified calibration plot — get_stratified_calibration_plot_prop","text":"generates stratified calibration plot","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_prop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates an stratified calibration plot — get_stratified_calibration_plot_prop","text":"","code":"get_stratified_calibration_plot_prop(   data,   n_groups,   type = c(\"predictions_aggregated\", \"predictions_recal_type_1\",     \"predictions_recal_type_2\"),   ... )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_prop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates an stratified calibration plot — get_stratified_calibration_plot_prop","text":"data dataset dependent variable models n_groups number points displayed type Type predictions calibration plot data generated : \"predictions_aggregated\", \"predictions_recal_type_1\" \"predictions_recal_type_2\". variable predictions need generated consider using calculate_predictions_recalibrated_type_1() calculate_predictions_recalibrated_type_2() functions. ... models plotted stratified calibration plot. named paramter name used strat","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_prop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates an stratified calibration plot — get_stratified_calibration_plot_prop","text":"stratified calibration plot given models","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_prop.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates an stratified calibration plot — get_stratified_calibration_plot_prop","text":"","code":"if (FALSE) { # \\dontrun{ get_stratified_calibration_plot_prop(data, 10, model1, model2) get_stratified_calibration_plot_prop(data, 10, strat1 = model1, strat2 = model2) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_surv.html","id":null,"dir":"Reference","previous_headings":"","what":"generates an stratified calibration plot — get_stratified_calibration_plot_surv","title":"generates an stratified calibration plot — get_stratified_calibration_plot_surv","text":"generates stratified calibration plot","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_surv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates an stratified calibration plot — get_stratified_calibration_plot_surv","text":"","code":"get_stratified_calibration_plot_surv(   data,   n_groups,   type = c(\"predictions_aggregated\", \"predictions_recal_type_1\",     \"predictions_recal_type_2\"),   ... )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_surv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates an stratified calibration plot — get_stratified_calibration_plot_surv","text":"data dataset dependent variable models n_groups number points displayed type Type predictions calibration plot data generated : \"predictions_aggregated\", \"predictions_recal_type_1\" \"predictions_recal_type_2\". variable predictions need generated consider using calculate_predictions_recalibrated_type_1() calculate_predictions_recalibrated_type_2() functions. ... models plotted stratified calibration plot. named paramter name used strat","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_surv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates an stratified calibration plot — get_stratified_calibration_plot_surv","text":"stratified calibration plot given models","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot_surv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates an stratified calibration plot — get_stratified_calibration_plot_surv","text":"","code":"if (FALSE) { # \\dontrun{ get_stratified_calibration_plot_surv(data, 10, model1, model2) get_stratified_calibration_plot_surv(data, 10, strat1 = model1, strat2 = model2) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/gusto.html","id":null,"dir":"Reference","previous_headings":"","what":"An example of the GUSTO-I W region dataset extracted from the book 'Clinical Prediction Models', see references. We have inserted missing values to the dataset in order to be used as an example for this package. — gusto","title":"An example of the GUSTO-I W region dataset extracted from the book 'Clinical Prediction Models', see references. We have inserted missing values to the dataset in order to be used as an example for this package. — gusto","text":"example GUSTO-W region dataset extracted book 'Clinical Prediction Models', see references. inserted missing values dataset order used example package.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/gusto.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example of the GUSTO-I W region dataset extracted from the book 'Clinical Prediction Models', see references. We have inserted missing values to the dataset in order to be used as an example for this package. — gusto","text":"","code":"data(gusto)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/gusto.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example of the GUSTO-I W region dataset extracted from the book 'Clinical Prediction Models', see references. We have inserted missing values to the dataset in order to be used as an example for this package. — gusto","text":"data frame nine variables: sho Shock: Killip class 3/4 vs. 1/2 a65 patient older 65 years old dia Diagnosed diabetes hig Categorized high risk Anterior Infart Location Prevous Myocardial Infarction hyp Hypotension: Systolic Blood Pressure < 100 mmHg hrt Heart rate: Pulse>80 (Tachycardia) ttr Time relief chest pain > 1h day30 30 day mortality sex Gender dataset 2188 rows 9 variables","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/gusto.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"An example of the GUSTO-I W region dataset extracted from the book 'Clinical Prediction Models', see references. We have inserted missing values to the dataset in order to be used as an example for this package. — gusto","text":"Steyerberg, E.W. (2019). Updating New Setting. : Clinical Prediction Models. Statistics Biology Health. Springer, Cham. https://doi.org/10.1007/978-3-030-16399-0_20","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a cox model. — mv_model_cox","title":"Creates a cox model. — mv_model_cox","text":"Creates Cox model variables needed used functions along package. Cox model follows $$S_0(t)^{exp(\\beta \\cdot X)}$$ need fullfill requirements model. predicting survival/risk \\(X\\) center values meas derivation data, normally reported inside articles.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a cox model. — mv_model_cox","text":"","code":"mv_model_cox(formula, S0 = NULL)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a cox model. — mv_model_cox","text":"formula Formula model calculate \\(\\beta \\cdot X\\) values, including coefficients means needed. S0 Value \\(S_0(t)\\) function time study.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a cox model. — mv_model_cox","text":"model used along package next characteristics empty generated functions package. formula: Formula \\(\\beta \\cdot X\\) calculated. S0: Value \\(S_0(t)\\) function time study. alpha: Recalibration parameter type 1 recalibration. S0_type_2: Value \\(S_0(t)\\) function time study type 2 recalibration. beta_overall: Recalibration parameter type 2 recalibration. predictions_aggregated: Aggregated predictions validation data. predictions_data: predictions validation data including imputations. betax: Aggregated \\(\\beta \\cdot X\\) values validation data. betax_data: predictions validation data including imputations. predictions_recal_type_1: Aggregated predictions recalibrating type 1 recalibration. predictions_recal_type_2: Aggregated predictions recalibrating type 2 recalibration. c_index: Harrell C-Index predictions validation cohort.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a cox model. — mv_model_cox","text":"","code":"model <- mv_model_cox(   formula = event ~ 0.5 * (x - 3) + 0.3 * (z - 0.2),   S0 = 0.98765 )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a logistic regression model — mv_model_logreg","title":"Creates a logistic regression model — mv_model_logreg","text":"Creates logistic regression model requirements external validation. logistic regression model calculates predictions following next equation. $$p(X) = \\frac{1}{1 + e^{-(\\beta \\cdot X)}}$$ can observe prediction depends \\(\\beta\\) coefficients covariable values, \\(X\\). logistic regression model parameter called intercept usually represented \\(\\beta_0\\). risk prediction derived log-odds function. $$log(\\frac{p}{1 - p}) = \\beta_0 + \\beta_1 \\cdot X_1 + \\beta_2 \\cdot X_2 + \\dots + \\beta_p \\cdot X_p$$ can see intercept value associated covariable. Therefore function parameters minimum needed obtain predictions.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a logistic regression model — mv_model_logreg","text":"","code":"mv_model_logreg(formula)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a logistic regression model — mv_model_logreg","text":"formula model formula calculate linear predictor, including coefficients intercept","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a logistic regression model — mv_model_logreg","text":"model used along package next characteristics empty generated functions package. formula: Formula model containing coefficients intercept. alpha_type_1: \\(\\alpha\\) value type 1 recalibration. alpha_type_2: \\(\\alpha\\) value type 2 recalibration. beta_overall: \\(\\beta_{overall}\\) value type 2 recalibration. predictions_aggregated: Aggregated predictions validation data. predictions_data: predictions validation data imputation. betax: Aggregated \\(\\beta \\cdot X\\) values validation data. betax_data: \\(\\beta \\cdot X\\) values validation imputation. predictions_recal_type_1: Aggregated predictions recalibrating type 1 recalibration. predictions_recal_type_2: Aggregated predictions recalibrating type 2 recalibration. c_index: Harrell C-Index predictions validation cohort.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a logistic regression model — mv_model_logreg","text":"","code":"model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":null,"dir":"Reference","previous_headings":"","what":"A generic function to print the MiceExtVal model — print.MiceExtVal","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"generic function print MiceExtVal model","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"","code":"# S3 method for class 'MiceExtVal' print(x, ...)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"x MiceExtVal model ... ignored passed function","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"model printed","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"","code":"model_cox <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  print(model_cox) #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765  model_logreg <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  print(model_logreg) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2"}]
