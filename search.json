[{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"required-libraries","dir":"Articles","previous_headings":"","what":"Required libraries","title":"MiceExtVal example of use","text":"following code snippet lists libraries needed run report. example package MiceExtVal use externally validate Framingham model, see Wilson et al. (1998). use dataset obtained kaggle. example use structured follows. Read explore dataset Impute missing data Define Framingham model Externally validate model","code":"library(MiceExtVal) library(dplyr) library(tidyr) library(mice) library(kableExtra) library(gtsummary) library(here) library(tidyr) library(tibble) library(survival)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"read-and-explore-the-dataset","dir":"Articles","previous_headings":"","what":"Read and Explore the Dataset","title":"MiceExtVal example of use","text":"recreate external validation Framingham model need dataset model variables. package included Framingham dataset provided kaggle Shrey Jain. dataset contains variables described next table. can observe exists missing values variables. following table represented percentage o missings variables least one row missing value.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"impute-missing-data","dir":"Articles","previous_headings":"","what":"Impute Missing Data","title":"MiceExtVal example of use","text":"ammend missing values impute expected values using mice package, see van Buuren & Groothuis-Oudshoorn (2011). execute default imputation interested precise, just want reproduce use case need impute missing data data externally validate one models.","code":"pred_matrix <- mice::make.predictorMatrix(MiceExtVal::framingham) pred_matrix[, \"randid\"] <- 0 pred_matrix[, \"period\"] <- 0  mice_data <- mice::mice(MiceExtVal::framingham) fram_long <- mice::complete(mice_data, \"long\")"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"the-framingham-model","dir":"Articles","previous_headings":"","what":"The Framingham Model","title":"MiceExtVal example of use","text":"data ready used need take time understand model want validate, Framingham model. model Cox model predicts risk suffer coronary heart disease patients \\(30-79\\) years old. Framingham model coefficients represented following table.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"requirements-to-define-the-model","dir":"Articles","previous_headings":"The Framingham Model","what":"Requirements to Define the Model","title":"MiceExtVal example of use","text":"Framingham model defined variables used calculate model predictions. dataset data needed meet requirements. defining model need generate variables present dataset. previous table can observe continous variables converted categorical. precisely, total cholesterol, HDL cholesterol blood pressure categorized.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"total-cholesterol","dir":"Articles","previous_headings":"The Framingham Model > Requirements to Define the Model","what":"Total Cholesterol","title":"MiceExtVal example of use","text":"total cholesterol variable categorized five categories, less 160 mg/dL, 160 199 mg/dL, 200 239 mg/dL, 240 279 mg/dl, 280 mg/dL. following code snippet generates variable dataset.","code":"fram_long <- fram_long |>   dplyr::mutate(     totchol_less_160 = as.numeric(totchol < 160),     totchol_160_199 = as.numeric(totchol >= 160 & totchol < 200),     totchol_200_239 = as.numeric(totchol >= 200 & totchol < 240),     totchol_240_279 = as.numeric(totchol >= 240 & totchol < 280),     totchol_greater_280 = as.numeric(totchol >= 280),   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"hdl-cholesterol","dir":"Articles","previous_headings":"The Framingham Model > Requirements to Define the Model","what":"HDL cholesterol","title":"MiceExtVal example of use","text":"Framingham model characterizes HDL cholesterol five groups, less 35 mg/dL, 35 44 mg/dL, 45 49 mg/dL, 50 59 mg/dL, 60 mg/dL. following code snippet generates variable dataset. {.plain .table-sm}","code":"fram_long <- fram_long |>   dplyr::mutate(     hdl_less_35 = as.numeric(hdlc < 35),     hdl_35_44 = as.numeric(hdlc >= 35 & hdlc < 44),     hdl_45_49 = as.numeric(hdlc >= 45 & hdlc < 49),     hdl_50_59 = as.numeric(hdlc >= 50 & hdlc < 59),     hdl_greater_60 = as.numeric(hdlc >= 60),   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"blood-pressure","dir":"Articles","previous_headings":"The Framingham Model > Requirements to Define the Model","what":"Blood pressure","title":"MiceExtVal example of use","text":"model defined variable aggregates systolyc blood pressure diastolic blood pressure five groups hypertension. defined Wilson et al. (1998), categorize individual blood pressure variables five groups, optimal, normal, high-normal, hypertension , hypertension II-IV. patient different blood pressure categories use highest one representation state. following code adds variable dataset, first generate individual categorization variables generate pressure variable aggregation . {.plain .table-sm} first generate variable called pressure categorize pressures one variable. pressure variable generate variables used model.","code":"pressure_labels <- c(   \"optimal\", \"normal\", \"high-normal\", \"hypertension I\", \"hypertension II-IV\" ) fram_long <- fram_long |>   dplyr::mutate(     sys_lvl = cut(       sysbp,       breaks = c(-Inf, 120, 130, 140, 160, Inf),       labels = pressure_labels     ),     dys_lvl = cut(       diabp,       breaks = c(-Inf, 80, 85, 90, 100, Inf),       labels = pressure_labels     ),     pressure = purrr::map2_int(       as.numeric(sys_lvl), as.numeric(dys_lvl), ~ max(.x, .y)       ),     pressure = factor(       pressure,       labels = pressure_labels     )   ) fram_long <- fram_long |>   dplyr::mutate(     bp_optimal = as.numeric(pressure == \"optimal\"),     bp_high_normal = as.numeric(pressure == \"high-normal\"),     bp_hypertension_i = as.numeric(pressure == \"hypertension I\"),     bp_hypertension_ii_iv = as.numeric(pressure == \"hypertension II-IV\")   )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"selecting-the-needed-variables","dir":"Articles","previous_headings":"The Framingham Model","what":"Selecting the Needed Variables","title":"MiceExtVal example of use","text":"Framingham variables generated need create model MiceExtVal package. Framingham model stratified sex. Therefore, need generate two models, one males another females. MiceExtVal package allow us define Cox model using MiceExtVal::mv_model_cox function need introduce model (coefficients), mean value derivation cohort variables (means), model formula know dependent variable (formula) survival basal function time study (S0).","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"generating-extra-needed-variables","dir":"Articles","previous_headings":"The Framingham Model > Selecting the Needed Variables","what":"Generating Extra Needed Variables","title":"MiceExtVal example of use","text":"variables like cursmoke diabetes factors used model need transform numeric variables \\(1\\) indicates TRUE \\(0\\) indicates FALSE. also generate variable age2 \\(age^2\\) needed females model. Additionally, generate survival outcome. Finally, generate males females datasets.","code":"fram_long <- fram_long |>   dplyr::mutate(     cursmoke = as.numeric(cursmoke == \"1\"),     diabetes = as.numeric(diabetes == \"1\"),     age2 = age**2,     anychd_surv = survival::Surv(timechd, anychd == \"Yes\")   ) male_fram_long <- fram_long |> dplyr::filter(sex == 1) female_fram_long <- fram_long |> dplyr::filter(sex == 2)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"generate-the-models","dir":"Articles","previous_headings":"The Framingham Model > Selecting the Needed Variables","what":"Generate the models","title":"MiceExtVal example of use","text":"models package created using MiceExtVal::mv_model_cox function want externally validate Cox model MiceExtVal::mv_model_logreg want validate logistic regression model. case want validate Framingham model Cox model. model needs different information order calculate predictions Cox model need introduce following parameters. formula: formula defines model. formula need define model coefficients needed, like case, means center variables \\(\\beta \\cdot X\\) calculation. S0: value \\(S_0(t)\\) time study \\(t\\) model. case \\(t = 10 \\text{ years}\\). Framingham model stratified sex, need generate two models externally validate .","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"males","dir":"Articles","previous_headings":"The Framingham Model > Selecting the Needed Variables > Generate the models","what":"Males","title":"MiceExtVal example of use","text":"next code snippet generates males model formula following original mean values coefficients described previous tables. defined needed parameters model can create model follows.","code":"males_formula <- anychd_surv ~ 0.0483 * (age - 48.3) +   0.4284 * (diabetes - 0.05) + 0.5234 * (cursmoke - 0.403) -   0.6595 * (totchol_less_160 - 0.075) + 0.1769 * (totchol_200_239 - 0.39) +   0.5054 * (totchol_240_279 - 0.165) + 0.6571 * (totchol_greater_280 - 0.057) +   0.4974 * (hdl_less_35 - 0.192) + 0.2431 * (hdl_35_44 - 0.357) -   0.0511 * (hdl_50_59 - 0.19) - 0.4866 * (hdl_greater_60 - 0.106) -   0.0023 * (bp_optimal - 0.202) + 0.2832 * (bp_high_normal - 0.202) +   0.5217 * (bp_hypertension_i - 0.225) +   0.6186 * (bp_hypertension_ii_iv - 0.128) male_model <- MiceExtVal::mv_model_cox(   formula = males_formula,   S0 = 0.9002 )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"females","dir":"Articles","previous_headings":"The Framingham Model > Selecting the Needed Variables > Generate the models","what":"Females","title":"MiceExtVal example of use","text":"females can reproduce already done males. previous parameters generate female_model externally validate Framingham female model.","code":"females_formula <- anychd_surv ~ 0.3377 * (age - 49.6) -   0.0027 * (age2 - 2604.5) + 0.5963 * (diabetes - 0.038) +   0.2925 * (cursmoke - 0.378) + -0.2614 * (totchol_less_160 - 0.079) +   0.2077 * (totchol_200_239 - 0.327) + 0.2439 * (totchol_240_279 - 0.2) +   0.5351 * (totchol_greater_280 - 0.91) + 0.8431 * (hdl_less_35 - 0.043) +   0.378 * (hdl_35_44 - 0.149) + 0.1978 * (hdl_45_49 - 0.124) -   0.4295 * (hdl_greater_60 - 0.407) - 0.5336 * (bp_optimal - 0.348) -   0.0677 * (bp_high_normal - 0.15) + 0.2629 * (bp_hypertension_i - 0.186) +   0.4657 * (bp_hypertension_ii_iv - 0.1) female_model <- MiceExtVal::mv_model_cox(   formula = females_formula,   S0 = 0.9625 )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"external-validation","dir":"Articles","previous_headings":"","what":"External validation","title":"MiceExtVal example of use","text":"defined Framingham model package can now start externally validate model. package functions separated two big groups, functions calculate predictions results model definition started calculate_, functions obtain external validation results started get_. external validation can structured three phases. Calculate predictions. Calculate recalibrations. Obtain external validation results.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"calculate-the-predictions","dir":"Articles","previous_headings":"External validation","what":"Calculate the predictions","title":"MiceExtVal example of use","text":"result inside model generated two tables predictions_data predictions_aggregated. next table shown first rows predictions_data table, predicted values imputations. second table shown first rows predictions_aggregated one aggregated prediction patient.","code":"male_model <- male_model |>   MiceExtVal::calculate_predictions(model = _, data = male_fram_long)  female_model <- female_model |>   MiceExtVal::calculate_predictions(model = _, data = female_fram_long)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"model-performance","dir":"Articles","previous_headings":"External validation","what":"Model performance","title":"MiceExtVal example of use","text":"model performance can separated two. ability model discriminate high-risk patients low-risk patients calibration .e. ability match real risk predicted risk. model C-Index calculated using Harrell’s C-Index calibration ability generating calibration plots.","code":""},{"path":[]},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"c-index-in-males","dir":"Articles","previous_headings":"External validation > Model performance > Calculating C-Index","what":"C-Index in Males","title":"MiceExtVal example of use","text":"","code":"male_model <- male_model |>   MiceExtVal::calculate_c_index(model = _, data = male_fram_long)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"c-index-in-females","dir":"Articles","previous_headings":"External validation > Model performance > Calculating C-Index","what":"C-Index in Females","title":"MiceExtVal example of use","text":"","code":"female_model <- female_model |>   MiceExtVal::calculate_c_index(model = _, data = female_fram_long)"},{"path":[]},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"calibration-plot-males","dir":"Articles","previous_headings":"External validation > Model performance > Calculating Calibration Plot","what":"Calibration Plot Males","title":"MiceExtVal example of use","text":"","code":"male_model |>   MiceExtVal::get_calibration_plot_data(     model = _,     data = male_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot(data = _)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"calibration-plot-females","dir":"Articles","previous_headings":"External validation > Model performance > Calculating Calibration Plot","what":"Calibration Plot Females","title":"MiceExtVal example of use","text":"","code":"female_model |>   MiceExtVal::get_calibration_plot_data(     model = _,     data = female_fram_long,     n_groups = 10,     type = \"predictions_aggregated\"   ) |>   MiceExtVal::get_calibration_plot(data = _)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/articles/get-started.html","id":"recalibration","dir":"Articles","previous_headings":"External validation","what":"Recalibration","title":"MiceExtVal example of use","text":"","code":"male_model <- male_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(     model = _, data = male_fram_long   ) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(     model = _, data = male_fram_long   )  male_model |>   MiceExtVal::get_calibration_plot_data(     model = _,     data = male_fram_long,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot(data = _) male_model |>   MiceExtVal::get_calibration_plot_data(     model = _,     data = male_fram_long,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot(data = _) female_model <- female_model |>   MiceExtVal::calculate_predictions_recalibrated_type_1(     model = _, data = female_fram_long   ) |>   MiceExtVal::calculate_predictions_recalibrated_type_2(     model = _, data = female_fram_long   )  female_model |>   MiceExtVal::get_calibration_plot_data(     model = _,     data = female_fram_long,     n_groups = 10,     type = \"predictions_recal_type_1\"   ) |>   MiceExtVal::get_calibration_plot(data = _) female_model |>   MiceExtVal::get_calibration_plot_data(     model = _,     data = female_fram_long,     n_groups = 10,     type = \"predictions_recal_type_2\"   ) |>   MiceExtVal::get_calibration_plot(data = _)"},{"path":[]},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Asier Ballesteros Domínguez. Author, maintainer.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ballesteros Domínguez (2025). MiceExtVal: Tools external validation Multiple Imputation Chained Equations methodology. R package version 0.0.1.","code":"@Manual{,   title = {MiceExtVal: Tools for external validation in Multiple Imputation by Chained Equations methodology},   author = {Asier {Ballesteros Domínguez}},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"miceextval","dir":"","previous_headings":"","what":"Tools for external validation in Multiple Imputation by Chained Equations methodology","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"goal MiceExtVal give users tools externally validate models using multiple imputation methodology. plenty packages, functions, literature externally validate models complete datasets lack tools working multiple imputed datasets. Nowadays recommended use techniques like multiple imputation chained equations (MICE) impute missing values present. MICE methodology requires realize many analysis imputed datasets , shown following graph. package generated assist users along external validation analysis Cox Logistic Regression models.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"can install development version MiceExtVal GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"metodologianavarrabiomed/mice-ext-val\")  # alternativelly you can use the `pak` package # install.packages(\"pak\") pak::pkg_install(\"metodologianavarrabiomed/mice-ext-val\")"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"package created perform analysis MICE cohort. package also asumed imputed cohort generated mice package also long format. imputed dataset generated package impute dataset least structure variables. external validation dataset must contain information imputed datasets information original dataset. mice package can obtain complete dataset long format function introduces imputed datasets single table adds two variables .id .imp. variable .id single id rows long format table .imp variable indicates imputation row belongs. package functions divided three groups, model definition functions starting mv_model, functions calculate model results starting calculate_, plot functions starting get_. example also assumed complete dataset called external_validation_data. Firstly, import package. R can also access variables without importing package putting package prefix like MiceExtVal::function. good practice use second declaration know package function belongs.","code":"complete <- mice::complete(imp, action = \"long\") library(MiceExtVal)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"defining-a-model","dir":"","previous_headings":"Examples","what":"Defining a model","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"using mv_model functions can generate package model definitions. define Cox model use function mv_model_cox define logistic regression model use function mv_model_logreg. model different requirements generated.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"cox-model","dir":"","previous_headings":"Examples > Defining a model","what":"Cox model","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"define Cox model need able describe following characteristics model. formula: Model formula calculate \\(\\beta \\cdot X\\) values. \\(S_0(t)\\): Value basal survival function time study \\(t\\) (must maximum time dataset) example defined Cox model defined formula: \\[ 0.98765^{exp(0.5 \\cdot (x - 3) + 0.3 \\cdot (z - 0.2))} \\] formula argument declaration code calculates \\(\\beta \\cdot X\\) values. formula included model coefficients also mean values, need centering results. formula two parts left part right part, left part must include dependent variable (outcome interest) right part must define calculation formula \\(\\beta \\cdot X\\). variables used formula must part external validation dataset. dependent variable must Surv object right part formula needs executable code calculate \\(\\beta \\cdot X\\). executable code can executed following code snippet. variables must defined external validation dataset must type variables eval(right_formula) returns value. important take care factor character variables throw errors non-value results. interesting transform variables dummies.","code":"cox_model <- MiceExtVal::mv_model_cox(  formula = event ~ 0.5 * (x - 3) + 0.3 * (z - 0.2),  S0 = 0.98765 ) # this is not actual package code   data |>     dplyr::mutate(risk_prediction = 1 - S0^exp(eval(right_formula)))"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"logistic-regression-model","dir":"","previous_headings":"Examples > Defining a model","what":"Logistic regression model","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"Similarly Cox model need able describe following characteristics model. formula: Model formula calculate linear predictors. example defined model \\(\\beta_0 = -1.2, \\beta_x = 0.5, \\beta_z = 0.3\\)","code":"logreg_model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"calculate-the-results","dir":"","previous_headings":"Examples","what":"Calculate the results","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"defined models next step actually calculate results. calculate_ functions allow us recreate highlighted part diagram. statistical analysis must performed imputed data sets separatelly aggregate results afterwards. external validation analysis normally performing calculation model predictions. predictions summarized indexes like C-Index plots like calibration plots. predictions matching reality. calibration plots allow us look accuracy. package define three types predictions, model original predictions calculated function calculate_predictions, first approach adjust model prediction observed risk calculated function calculate_predictions_recalibrated_type_1, second approach adjust model prediction reality calculated function calculate_predictions_recalibrated_type_2. Therefore, first step able obtain external validation results calculate original model predictions. Suppose want calculate model predictions external validation cohort, use function calculate_predictions follows. can concatenate prediction functions using pipe operator %>% |>. recommend use R native pipe operator |>. Harrell’s C-index calculation can done using function calculate_c_index. function needs least model prediction calculated able obtain aggregated Harrell’s C-index.","code":"model <- model |> calculate_predictions(external_validation_data) model <- model |>  calculate_predictions(external_validation_data) |>  calculate_predictions_recalibrated_type_1(external_validation_data) |>  calculate_predictions_recalibrated_type_2(external_validation_data) model <- model |>    # only calculate the predictions if they are not already part of the model   calculate_predictions(external_validation_data) |>   calculate_c_index(external_validation_data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"visualizing-the-results","dir":"","previous_headings":"Examples","what":"Visualizing the results","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"results already generated model, ready visualize . shown next graph last step package pipeline, results visualization. package two plots defined, calibration plots shows model predictions matched observed risk, c-index foresplot shows discrimination abilities different models.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"calibration-plots","dir":"","previous_headings":"Examples > Visualizing the results","what":"Calibration plots","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"obtain calibration plots need use two functions get_calibration_plot_data generates needed data actually generate calibration plot get_calibration_plot whose needed parameter outcome get_calibration_plot_data. can generate calibration plot shown next code snippet function get_calibration_plot. function returns ggplot2 object. Therefore, can modified ggplot2 plot. argument type can used generate calibration plots recalibrated predictions. next code snippet generate calibration plot type 1 recalibrated predictions","code":"model |>   # only calculate the predictions if they are not already part of the model   calculate_predictions(external_validation_data) |>   get_calibration_plot_data(     data = external_validation_data,      n_groups = 10,      type = \"predictions_aggregated\"   ) |>   get_calibration_plot() model |>  # only calculate the predictions if they are not already part of the model  calculate_predictions(external_validation_data) |>  calculate_predictions_recalibrated_type_1(external_validation_data) |>  get_calibration_plot_data(    data = external_validation_data,     n_groups = 10,     type = \"predictions_recal_type_1\"  ) |>  get_calibration_plot()"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/index.html","id":"c-index-forestplot","dir":"","previous_headings":"Examples > Visualizing the results","what":"C-index forestplot","title":"Tools for external validation in Multiple Imputation by Chained Equations methodology","text":"feature currently development. external validations normally formed many models want compare results. Forestplots great way visualizing c-index values multiple models one graph. package provides function get_c_index_forestplot. can provide illimited number models c_index calculated returns forestplot generated forestplot package.","code":"get_c_index_forestplot(Cox = cox_model, `Logistic Regression`= logreg_model)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_c_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates Harrell C-Index for a model — calculate_c_index","title":"Calculates Harrell C-Index for a model — calculate_c_index","text":"function calculates Harrell C Index value model imputed dataset stored data long dataset. Harrell's C Index calculation realized using Hmisc::rcorr.cens function Harrell's package Hmisc. calculating index imputed dataset aggregates using rubin rules psfmi::pool_RR function Heymans' package psfmi. Finally, stores result inside c_index attribute model.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_c_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates Harrell C-Index for a model — calculate_c_index","text":"","code":"calculate_c_index(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_c_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates Harrell C-Index for a model — calculate_c_index","text":"model model generated function mv_model_cox() mv_model_logreg() data Multiple imputation data organized long dataset .progress TRUE render progress bar FALSE otherwise","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_c_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates Harrell C-Index for a model — calculate_c_index","text":"model passed parameter Harrell C Index value stored $c_index","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_c_index.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculates Harrell C-Index for a model — calculate_c_index","text":"F. E. Harrell, “Harrell Miscellaneous (R package Hmisc version 5.1-1),” R-project.org, Sep. 2023, doi: https://cran.r-project.org/package=Hmisc. M. Heymans, “Prediction Model Pooling, Selection Performance Evaluation Across Multiply Imputed Datasets (R package psfmi version 1.4.0),” R-project.org, Jun. 2023, doi: https://cran.r-project.org/package=psfmi.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_c_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates Harrell C-Index for a model — calculate_c_index","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1,1,1,2,2,2,3,3,3),   id = c(1,2,3,1,2,3,1,2,3),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)) )  model <- model |>   calculate_predictions(data) |>   calculate_c_index(data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the predictions for a Cox model — calculate_predictions.cox","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"Calculates predictions given Cox model external validation data. predictions calculated following definition cox model $$S_0(t)^{e^{(\\beta \\cdot X)}}$$ \\(S_0(t)\\) stands survival function time \\(t\\), \\(\\beta\\) stands model coefficients \\(X\\) stands centered values id.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"","code":"# S3 method for class 'cox' calculate_predictions(model, data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"model Model generated mv_model_cox() data External validation data. Multiple imputation dataset long format.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"model parameters predictions_aggregated, predictions_data, betax betax_data populated. predictions_aggregated, stores predictions aggregated mean. predictions_data, stores predictions imputed datasets. betax, stores \\(\\beta \\cdot X\\) values aggregated mean. betax_data, stores \\(\\beta \\cdot X\\) values imputed datasets.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the predictions for a Cox model — calculate_predictions.cox","text":"","code":"set.seed(123)  model <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |> calculate_predictions(data) #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1     0.0131 #> 2     2     0.0106 #> 3     3     0.0105 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1    0.0137      1     1 #> 2    0.0129      1     2 #> 3    0.0102      1     3 #> 4    0.0124      2     1 #> 5    0.00995     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.0620 #> 2     2 -0.163  #> 3     3 -0.162  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.102       1     1 #> 2  0.0466      1     2 #> 3 -0.195       1     3 #> 4  0.00105     2     1 #> 5 -0.217       2     2"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the predictions for a model — calculate_predictions","title":"Calculate the predictions for a model — calculate_predictions","text":"generic method calculating predictions given model. parameters must passed S3 methods class (calculate_predictions.cox() calculate_predictions.logreg())","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the predictions for a model — calculate_predictions","text":"","code":"calculate_predictions(model, data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the predictions for a model — calculate_predictions","text":"model model generated function mv_model_cox() mv_model_logreg() data Data parameter calculate_predictions.cox() calculate_predictions.logreg()","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the predictions for a model — calculate_predictions","text":"model parameters predictions_aggregated, predictions_data, betax betax_data populated.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the predictions for a model — calculate_predictions","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2))  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |> calculate_predictions(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.515 #> 2     2      0.460 #> 3     3      0.460 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.526     1     1 #> 2      0.512     1     2 #> 3      0.451     1     3 #> 4      0.500     2     1 #> 5      0.446     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.0620 #> 2     2 -0.163  #> 3     3 -0.162  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.102       1     1 #> 2  0.0466      1     2 #> 3 -0.195       1     3 #> 4  0.00105     2     1 #> 5 -0.217       2     2"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"Calculates predictions given logistic regression model external validation data. predictions logistic regression model calculated following next formula. $$p(X) = \\frac{1}{1 + e^{-(\\beta \\cdot X)}}$$ \\(X\\) stands covariable values \\(\\beta\\) coefficient values.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"","code":"# S3 method for class 'logreg' calculate_predictions(model, data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"model Model generated mv_model_logreg() data External validation data. Multiple imputation dataset long format.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"model parameters predictions_aggregated, predictions_data, betax betax_data populated. predictions_aggregated, stores predictions aggregated mean. predictions_data, stores predictions imputed datasets. betax, stores \\(\\beta \\cdot X\\) values aggregated mean. betax_data, stores \\(\\beta \\cdot X\\) values imputed datasets.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions.logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the predictions for a logistic regression model — calculate_predictions.logreg","text":"","code":"set.seed(123)  model <- mv_model_logreg(   formula = event ~ 0.5 * x + 0.3 * z + 1.2 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.2)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )   model |> calculate_predictions(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z + 1.2 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.914 #> 2     2      0.894 #> 3     3      0.894 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.917     1     1 #> 2      0.913     1     2 #> 3      0.891     1     3 #> 4      0.909     2     1 #> 5      0.889     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id betax #>   <dbl> <dbl> #> 1     1  2.36 #> 2     2  2.14 #> 3     3  2.14 #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>   betax  .imp    id #>   <dbl> <dbl> <dbl> #> 1  2.40     1     1 #> 2  2.35     1     2 #> 3  2.10     1     3 #> 4  2.30     2     1 #> 5  2.08     2     2"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"Using function get_recalibrate_params_type_1 calculates recalibration parameters imputed datasets stored data. parameters estimated aggregates calculates recalibrated predictions aggregated parameters aggregated predictions.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"","code":"# S3 method for class 'cox' calculate_predictions_recalibrated_type_1(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"model Model generated mv_model_cox(). Needs predictions parameter model, generate function calculate_predictions() must executed model. data External validation data. Multiple imputation dataset long format. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"model parameter predictions_recal_type_1 alpha populated. predictions_recal_type_1: stores type 1 recalibrated predictions stored follows alpha: stores \\(\\alpha\\) recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 1 recalibrated predictions — calculate_predictions_recalibrated_type_1.cox","text":"","code":"set.seed(123)  model <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765 #>  #> ── alpha ── #>  #> -Inf #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1     0.0145 #> 2     2     0.0135 #> 3     3     0.0123 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1     0.0104     1     1 #> 2     0.0158     1     2 #> 3     0.0162     1     3 #> 4     0.0136     2     1 #> 5     0.0129     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.129  #> 2     2  0.0805 #> 3     3 -0.0544 #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>     betax  .imp    id #>     <dbl> <dbl> <dbl> #> 1 -0.170      1     1 #> 2  0.247      1     2 #> 3  0.276      1     3 #> 4  0.0990     2     1 #> 5  0.0411     2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1                 0 #> 2     2                 0 #> 3     3                 0"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"generic method calculating type 1 recalibration predictions model.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"","code":"calculate_predictions_recalibrated_type_1(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"model Model recalibrated predictions calculated data Data parameter calculate_predictions_recalibrated_type_1.cox() function calculate_predictions_recalibrated_type_1.logreg() function. .progress .progress parameter calculate_predictions_recalibrated_type_1.cox() function calculate_predictions_recalibrated_type_1.logreg() function.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"model parameter predictions_recal_type_1 also recalibration parameters populated.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 1 recalibration predictions for a model. — calculate_predictions_recalibrated_type_1","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"Calculates type 1 recalibrated predictions logistic regression model. type 1 recalibration defined \\(\\alpha\\) parameter updates value intercept (\\(\\beta_0\\)) model. log-odds function rewritten follows. $$log(\\frac{p}{1 - p}) = \\alpha + \\beta_0 + \\beta_1 \\cdot X_1 + \\beta_2 \\cdot X_2 + \\dots + \\beta_p \\cdot X_p$$ Thus, predictions updated adjusting intercept value model external validation data. \\(\\alpha\\) parameter estimated imputed datasets deriving logistic regression model using model log-odds offset. coefficients models aggregated using mean. Using aggregated parameter aggregated log-odds new predictions calculated follows. $$\\frac{1}{1 + e^{(-(\\alpha + (\\beta \\cdot X)))}}$$","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"","code":"# S3 method for class 'logreg' calculate_predictions_recalibrated_type_1(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"model Model generated mv_model_logreg(). Needs predictions parameter model, generate function calculate_predictions must executed model. attribute must generated using calculate_predictions() data Data predictions must recalibrated. .progress TRUE render progress bar, FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"model parameters predictions_recal_type_1 alpha_type_1 populated. predictions_recal_type_1: stores type 1 recalibrated predictions follows alpha_type_1: stores \\(\\alpha\\) recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_1.logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 1 recalibrated predictions for a logistic regression model. — calculate_predictions_recalibrated_type_1.logreg","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"function calculates type 2 recalibrated predictions Cox model. help recalibration model function get_recalibrate_params_type_2_cox() defined elsewhere package. Using auxiliar function recalibration parameters calculated imputed datasets stored data long dataset. estimating recalibration parameters imputed datasets aggregated mean use recalibrate predictions model. type 2 recalibration needs two parameters S0_type_2 beta_overall. parameters calculated get_recalibrate_params_type_2_cox() function. estimated, aggregated mean. Finally type 2 recalibration parameters aggregated predictions type 2 recalibrated predictions calculated. $$S_{0, \\text{type 2}}(t)^{exp(\\beta_{overall}(\\beta \\cdot X))}$$ \\(S_{0, \\text{type 2}}(t)\\) estimated using Weibull distribution \\(\\beta_{overall}\\) estimated deriving Cox model \\(\\beta \\cdot X\\) unique covariate. parameters estimated using get_recalibrate_params_type_2_cox() function.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"","code":"# S3 method for class 'cox' calculate_predictions_recalibrated_type_2(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"model Model generated mv_model_cox(). Needs predictions parameter model, generate function calculate_predictions() must executed model. data External validation data. Multiple imputation dataset long format. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"model parameter predictons_recalibrated_type_2, S0_type_2 beta_overall populated. predictions_recal_type_2: stores type 2 recalibrated predictions follows. S0_type_2: stores \\(S_{0, \\text{type 2}}(t)\\) type 2 recalibration parameter. beta_overall: stores \\(\\beta_{overall}\\) type 2 recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 2 recalibrated predictions for a Cox model — calculate_predictions_recalibrated_type_2.cox","text":"","code":"set.seed(123)  model <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) |>   calculate_predictions_recalibrated_type_2(data) #> Warning: Ran out of iterations and did not converge #> Warning: Ran out of iterations and did not converge #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765 #>  #> ── alpha ── #>  #> -Inf #>  #> ── S0_type_2 ── #>  #> 0.828995910783699 #>  #> ── beta_overall ── #>  #> NA #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1     0.0145 #> 2     2     0.0135 #> 3     3     0.0123 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1     0.0104     1     1 #> 2     0.0158     1     2 #> 3     0.0162     1     3 #> 4     0.0136     2     1 #> 5     0.0129     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1  0.129  #> 2     2  0.0805 #> 3     3 -0.0544 #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>     betax  .imp    id #>     <dbl> <dbl> <dbl> #> 1 -0.170      1     1 #> 2  0.247      1     2 #> 3  0.276      1     3 #> 4  0.0990     2     1 #> 5  0.0411     2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1                 0 #> 2     2                 0 #> 3     3                 0 #> ── predictions_recal_type_2 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_2 #>   <dbl>             <dbl> #> 1     1                NA #> 2     2                NA #> 3     3                NA"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"generic method calculating type 2 recalibration predictions given model.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"","code":"calculate_predictions_recalibrated_type_2(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"model Model recalibrated predictions calculated data Data parameter calculate_predictions_recalibrated_type_2.cox() function calculate_predictions_recalibrated_type_2.logreg() function .progress .progress parameter calculate_predictions_recalibrated_type_2.cox() function calculate_predictions_recalibrated_type_2.logreg() function","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"model parameter predictions_recal_type_2 also recalibration parameters populated.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 2 recalibration predictions for a model. — calculate_predictions_recalibrated_type_2","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) |>   calculate_predictions_recalibrated_type_2(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── alpha_type_2 ── #>  #> 155.926045685198 #>  #> ── beta_overall ── #>  #> 528.594440157522 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424 #> ── predictions_recal_type_2 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_2 #>   <dbl>             <dbl> #> 1     1              1    #> 2     2              1.00 #> 3     3              1.00"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"Calculates type 2 recalibrated predictions logistic regression model. type 2 recalibration uses two parameters update model predictions, \\(\\alpha\\) parameter allow update model intercept \\(\\beta_{overall}\\) parameter allow update importance log-odds (\\(\\beta \\cdot X\\)) values. log-odds function can rewritten $$log(\\frac{p}{1 - p}) = \\alpha + \\beta_{overall} \\cdot (\\beta_0 + \\beta_1 \\cdot X_1 + \\beta_2 \\cdot X_2 + \\dots + \\beta_p \\cdot X_p)$$ parameters estimated deriving logistic regression model imputations using model log-odds covariate. coefficients model represent parameter estimations aggregated using rubin rules. , recalibrated predictions calculated using parameters aggregated log-odds. $$\\frac{1}{1 + e^{(-(\\alpha + \\beta_{overall}(\\beta \\cdot X)))}}$$","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"","code":"# S3 method for class 'logreg' calculate_predictions_recalibrated_type_2(model, data, .progress = FALSE)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"model Model generated mv_model_logreg(). Needs predictions parameter model, generate function calculate_predictions() must executed model. data Data predictions must recalibrated. .progress TRUE render progress bar FALSE otherwise.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"model parameter predictons_recalibrated_type_2, S0_type_2 beta_overall populated. predictions_recal_type_2: stores type 2 recalibrated predictions follows. alpha_type_2: stores \\(\\alpha\\) type 2 recalibration parameter. beta_overall: stores \\(\\beta_{overall}\\) type 2 recalibration parameter.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/calculate_predictions_recalibrated_type_2.logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the type 2 recalibrated predictions for a logistic regression model — calculate_predictions_recalibrated_type_2.logreg","text":"","code":"set.seed(123)  model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  data <- data.frame(   .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),   id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),   event = survival::Surv(rpois(9, 5), rbinom(n = 9, size = 1, prob = 0.5)),   x = rnorm(9, 1, 0.25),   z = rnorm(9, 2, 0.75) )  model |>   calculate_predictions(data) |>   calculate_predictions_recalibrated_type_1(data) |>   calculate_predictions_recalibrated_type_2(data) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2 #>  #> ── alpha_type_1 ── #>  #> -0.0453625350741732 #>  #> ── alpha_type_2 ── #>  #> 155.926045685198 #>  #> ── beta_overall ── #>  #> 528.594440157522 #>  #> ── predictions_aggregated ── #>  #> # A tibble: 3 × 2 #>      id prediction #>   <dbl>      <dbl> #> 1     1      0.490 #> 2     2      0.435 #> 3     3      0.435 #> ── predictions_data ── #>  #> # A tibble: 5 × 3 #>   prediction  .imp    id #>        <dbl> <dbl> <dbl> #> 1      0.501     1     1 #> 2      0.487     1     2 #> 3      0.427     1     3 #> 4      0.475     2     1 #> 5      0.421     2     2 #> ── betax ── #>  #> # A tibble: 3 × 2 #>      id   betax #>   <dbl>   <dbl> #> 1     1 -0.0380 #> 2     2 -0.263  #> 3     3 -0.262  #> ── betax_data ── #>  #> # A tibble: 5 × 3 #>      betax  .imp    id #>      <dbl> <dbl> <dbl> #> 1  0.00210     1     1 #> 2 -0.0534      1     2 #> 3 -0.295       1     3 #> 4 -0.0989      2     1 #> 5 -0.317       2     2 #> ── predictions_recal_type_1 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_1 #>   <dbl>             <dbl> #> 1     1             0.479 #> 2     2             0.424 #> 3     3             0.424 #> ── predictions_recal_type_2 ── #>  #> # A tibble: 3 × 2 #>      id prediction_type_2 #>   <dbl>             <dbl> #> 1     1              1    #> 2     2              1.00 #> 3     3              1.00"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/framingham.html","id":null,"dir":"Reference","previous_headings":"","what":"An example dataset from the Framingham study — framingham","title":"An example dataset from the Framingham study — framingham","text":"example dataset Framingham study","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/framingham.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"An example dataset from the Framingham study — framingham","text":"","code":"data(framingham)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/framingham.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"An example dataset from the Framingham study — framingham","text":"data frame nine variables: randid id patient period period measure study sex sex patient age age patient totchol total cholesterol patient mg/dL hdlc hdl patient mg/dL ldlc ldl patient mg/dL sysbp systolic blood pressure patient mmHg diabp diastolic blood pressure patient mmHg cursmoke patient currently smoking diabetes patient diagnosed diabetes anychd patient suffered CHD event follow-timechd time follow patient dataset 11627 rows 13 variables details, see https://www.kaggle.com/datasets/shreyjain601/framingham-heart-study","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_c_index_forestplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a forestplot to visualize C-Index of different models — get_c_index_forestplot","title":"Generates a forestplot to visualize C-Index of different models — get_c_index_forestplot","text":"list models passed parameters function extracts C-Index value generates forestplot compare results.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_c_index_forestplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a forestplot to visualize C-Index of different models — get_c_index_forestplot","text":"","code":"get_c_index_forestplot(...)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_c_index_forestplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a forestplot to visualize C-Index of different models — get_c_index_forestplot","text":"... list models conform forestplot. passed variables, variable name assigned model name forestplot. , passed named arguments argument name used forestplot","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_c_index_forestplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a forestplot to visualize C-Index of different models — get_c_index_forestplot","text":"forestplot C-Index data list models","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_c_index_forestplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a forestplot to visualize C-Index of different models — get_c_index_forestplot","text":"","code":"if (FALSE) { # \\dontrun{ get_c_index_forestplot(A = model1, B = model2, C = model3, D = model4) get_c_index_forestplot(model1, model2, model3, model4) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the calibration plot — get_calibration_plot","title":"Generates the calibration plot — get_calibration_plot","text":"Generates calibration plot data needed print . data generated get_calibration_plot_data() function.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the calibration plot — get_calibration_plot","text":"","code":"get_calibration_plot(data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the calibration plot — get_calibration_plot","text":"data Outcome get_calibration_plot_data() function.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the calibration plot — get_calibration_plot","text":"ggplot2 object ready plotted","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates the calibration plot — get_calibration_plot","text":"","code":"if (FALSE) { # \\dontrun{ model |>    get_calibration_plot_data(data, 10, type = \"predictions_aggregated\") |>    get_calibration_plot() } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates the data needed for the calibration plot — get_calibration_plot_data","title":"Generates the data needed for the calibration plot — get_calibration_plot_data","text":"Generates data needed calibration plot. calibration plot needs separate model predictions risk groups. First function separates predictions n_groups computes mean value model predictions also observed value. observed value estimated value study time estimated using Kaplan-Meier estimator.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates the data needed for the calibration plot — get_calibration_plot_data","text":"","code":"get_calibration_plot_data(   model,   data,   n_groups,   type = \"predictions_aggregated\" )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates the data needed for the calibration plot — get_calibration_plot_data","text":"model Model generated mv_model_cox() mv_model_logreg(). Needs predictions parameter model, generate function calculate_predictions() must executed model. want obtain also recalibrated data model must initalize recalibrated predictions calculate_predictions_recalibrated_type_1() calculate_predictions_recalibrated_type_2(). data Data observed predictions calculated. n_groups Number groups must calculated. type Type predictions calibration plot data generated : \"predictions_aggregated\", \"predictions_recal_type_1\" \"predictions_recal_type_2\"","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates the data needed for the calibration plot — get_calibration_plot_data","text":"tibble data ready generate calibration plot.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_calibration_plot_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates the data needed for the calibration plot — get_calibration_plot_data","text":"","code":"if (FALSE) { # \\dontrun{ model |>   get_calibration_plot_data(data = test_data, n_groups = 10, type = \"predictions_aggregated\") } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate.html","id":null,"dir":"Reference","previous_headings":"","what":"Logic for checkin all the needed parameters for calculate_ functions are correct — get_error_message_calculate","title":"Logic for checkin all the needed parameters for calculate_ functions are correct — get_error_message_calculate","text":"Logic checkin needed parameters calculate_ functions correct","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logic for checkin all the needed parameters for calculate_ functions are correct — get_error_message_calculate","text":"","code":"get_error_message_calculate(model, data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logic for checkin all the needed parameters for calculate_ functions are correct — get_error_message_calculate","text":"model MiceExtVal model check errors data External validation dataset model evaluated","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logic for checkin all the needed parameters for calculate_ functions are correct — get_error_message_calculate","text":"NULL errors found actual error errors found.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate_recalibrated.html","id":null,"dir":"Reference","previous_headings":"","what":"generates the error messages for the recalibrated predictions — get_error_message_calculate_recalibrated","title":"generates the error messages for the recalibrated predictions — get_error_message_calculate_recalibrated","text":"generates error messages recalibrated predictions","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate_recalibrated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates the error messages for the recalibrated predictions — get_error_message_calculate_recalibrated","text":"","code":"get_error_message_calculate_recalibrated(model, data)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate_recalibrated.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates the error messages for the recalibrated predictions — get_error_message_calculate_recalibrated","text":"model MiceExtVal model check errors data External validation dataset model evaluated","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_error_message_calculate_recalibrated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates the error messages for the recalibrated predictions — get_error_message_calculate_recalibrated","text":"error message given model data","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"Obtains recalibration parameters following type 1 recalibration definition. Recalibrates predictions type 1 recalibration type 1 recalibration follows guidelines presented Crowson et al. (2016). recalibration follows next proposition obtain \\(\\alpha\\) parameter allow recalibrate predictions new validation dataset. recalibration adjusts incidence event known model new dataset. \\(\\alpha\\) value recalibration calculated difference survival basal function reported model mean value model predictions external validation cohort. $$\\alpha = S_{model}(t) - \\text{mean predictions}$$.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"","code":"get_recalibrate_param_type_1_cox(time, event, survival_predictions)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"time time follow patient, must time event patient suffers event , must logical survival_predictions survival predictions patients, must numeric","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"\\(\\alpha\\) value.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"C. S. Crowson, “Assessing calibration prognostic risk scores - Cynthia S Crowson, Elizabeth J Atkinson, Terry M Therneau, 2016,” Statistical Methods Medical Research, 2016. https://journals.sagepub.com/doi/10.1177/0962280213497434 (accessed Nov. 17, 2023).","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_param_type_1_cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtain the \\(\\alpha\\) value for the recalibration. — get_recalibrate_param_type_1_cox","text":"","code":"if (FALSE) { # \\dontrun{ get_recalibrate_param_type_1_cox(data, s0) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"Calculates recalibration type 2 parameters recalibrate_data returns list two needed parameters \\(S_0(t)\\), survival estimation time \\(t\\) external validation data, \\(\\beta_{overall}\\), importance \\(\\beta \\cdot X\\) values external validation data. survival function estimation calculated Weibull distribution. Weibull model derived external validation cohort value estimated model time \\(t\\) used recalibration \\(S_0(t)\\). importance \\(\\beta \\cdot X\\) calculated deriving Cox model using covariate model \\(\\beta \\cdot X\\) values. derived Cox model coefficient used \\(\\beta_{overall}\\).","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"","code":"get_recalibrate_params_type_2_cox(time, event, betax)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"time time follow patient, must numeric event patient suffered event follow , must numeric \\(1\\) event \\(0\\) othercase betax betax values, \\(\\beta X\\), original predictions, must numeric","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"list two elements: S0: \\(S_0(t)\\) beta_overall: \\(\\beta_{overall}\\) value type 2 recalibration","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_recalibrate_params_type_2_cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Obtains the \\(S_0(t)\\) and \\(\\beta_{overall}\\) parameters for recalibration — get_recalibrate_params_type_2_cox","text":"","code":"if (FALSE) { # \\dontrun{ get_recalibrate_params_type_2_cox(data, betax, t) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"generates an stratified calibration plot — get_stratified_calibration_plot","title":"generates an stratified calibration plot — get_stratified_calibration_plot","text":"generates stratified calibration plot","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generates an stratified calibration plot — get_stratified_calibration_plot","text":"","code":"get_stratified_calibration_plot(data, n_groups, type, ...)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generates an stratified calibration plot — get_stratified_calibration_plot","text":"data dataset dependent variable models n_groups number points displayed type Type predictions calibration plot data generated : \"predictions_aggregated\", \"predictions_recal_type_1\" \"predictions_recal_type_2\". variable predictions need generated consider using calculate_predictions_recalibrated_type_1() calculate_predictions_recalibrated_type_2() functions. ... models plotted stratified calibration plot. named paramter name used strat","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generates an stratified calibration plot — get_stratified_calibration_plot","text":"stratified calibration plot given models","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/get_stratified_calibration_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"generates an stratified calibration plot — get_stratified_calibration_plot","text":"","code":"if (FALSE) { # \\dontrun{ get_stratified_calibration_plot(data, 10, model1, model2) get_stratified_calibration_plot(data, 10, strat1 = model1, strat2 = model2) } # }"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a cox model. — mv_model_cox","title":"Creates a cox model. — mv_model_cox","text":"Creates Cox model variables needed used functions along package. Cox model follows $$S_0(t)^{exp(\\beta \\cdot X)}$$ need fullfill requirements model. predicting survival/risk \\(X\\) center values meas derivation data, normally reported inside articles.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a cox model. — mv_model_cox","text":"","code":"mv_model_cox(formula, S0 = NULL)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a cox model. — mv_model_cox","text":"formula Formula model calculate \\(\\beta \\cdot X\\) values, including coefficients means needed. S0 Value \\(S_0(t)\\) function time study.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a cox model. — mv_model_cox","text":"model used along package next characteristics empty generated functions package. formula: Formula \\(\\beta \\cdot X\\) calculated. S0: Value \\(S_0(t)\\) function time study. alpha: Recalibration parameter type 1 recalibration. S0_type_2: Value \\(S_0(t)\\) function time study type 2 recalibration. beta_overall: Recalibration parameter type 2 recalibration. predictions_aggregated: Aggregated predictions validation data. predictions_data: predictions validation data including imputations. betax: Aggregated \\(\\beta \\cdot X\\) values validation data. betax_data: predictions validation data including imputations. predictions_recal_type_1: Aggregated predictions recalibrating type 1 recalibration. predictions_recal_type_2: Aggregated predictions recalibrating type 2 recalibration. c_index: Harrell C-Index predictions validation cohort.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_cox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a cox model. — mv_model_cox","text":"","code":"model <- mv_model_cox(   formula = event ~ 0.5 * (x - 3) + 0.3 * (z - 0.2),   S0 = 0.98765 )"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a logistic regression model — mv_model_logreg","title":"Creates a logistic regression model — mv_model_logreg","text":"Creates logistic regression model requirements external validation. logistic regression model calculates predictions following next equation. $$p(X) = \\frac{1}{1 + e^{-(\\beta \\cdot X)}}$$ can observe prediction depends \\(\\beta\\) coefficients covariable values, \\(X\\). logistic regression model parameter called intercept usually represented \\(\\beta_0\\). risk prediction derived log-odds function. $$log(\\frac{p}{1 - p}) = \\beta_0 + \\beta_1 \\cdot X_1 + \\beta_2 \\cdot X_2 + \\dots + \\beta_p \\cdot X_p$$ can see intercept value associated covariable. Therefore function parameters minimum needed obtain predictions.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a logistic regression model — mv_model_logreg","text":"","code":"mv_model_logreg(formula)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a logistic regression model — mv_model_logreg","text":"formula model formula calculate linear predictor, including coefficients intercept","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a logistic regression model — mv_model_logreg","text":"model used along package next characteristics empty generated functions package. formula: Formula model containing coefficients intercept. alpha_type_1: \\(\\alpha\\) value type 1 recalibration. alpha_type_2: \\(\\alpha\\) value type 2 recalibration. beta_overall: \\(\\beta_{overall}\\) value type 2 recalibration. predictions_aggregated: Aggregated predictions validation data. predictions_data: predictions validation data imputation. betax: Aggregated \\(\\beta \\cdot X\\) values validation data. betax_data: \\(\\beta \\cdot X\\) values validation imputation. predictions_recal_type_1: Aggregated predictions recalibrating type 1 recalibration. predictions_recal_type_2: Aggregated predictions recalibrating type 2 recalibration. c_index: Harrell C-Index predictions validation cohort.","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/mv_model_logreg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a logistic regression model — mv_model_logreg","text":"","code":"model <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":null,"dir":"Reference","previous_headings":"","what":"A generic function to print the MiceExtVal model — print.MiceExtVal","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"generic function print MiceExtVal model","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"","code":"# S3 method for class 'MiceExtVal' print(x, ...)"},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"x MiceExtVal model ... ignored passed function","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"model printed","code":""},{"path":"https://metodologianavarrabiomed.github.io/mice-ext-val/reference/print.MiceExtVal.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A generic function to print the MiceExtVal model — print.MiceExtVal","text":"","code":"model_cox <- mv_model_cox(   formula = event ~ 0.5 * (x - 1) + 0.3 * (z - 2),   S0 = 0.98765 )  print(model_cox) #>  #> ── <MiceExtVal/cox> ──────────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * (x - 1) + 0.3 * (z - 2) #>  #> ── S0 ── #>  #> 0.98765  model_logreg <- mv_model_logreg(formula = event ~ 0.5 * x + 0.3 * z - 1.2)  print(model_logreg) #>  #> ── <MiceExtVal/logreg> ───────────────────────────────────────────────────────── #>  #> ── formula ── #>  #> event ~ 0.5 * x + 0.3 * z - 1.2"}]
