% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_calibration_plot_data_surv.R
\name{get_calibration_plot_data_surv}
\alias{get_calibration_plot_data_surv}
\title{Generates the data needed for the calibration plot}
\usage{
get_calibration_plot_data_surv(
  model,
  data,
  n_groups,
  type = "predictions_aggregated"
)
}
\arguments{
\item{model}{Model generated with \code{\link[=mv_model_cox]{mv_model_cox()}} or \code{\link[=mv_model_logreg]{mv_model_logreg()}}. Needs the \code{predictions} parameter of the model, to generate it the function \code{\link[=calculate_predictions]{calculate_predictions()}} must be executed over the model. If we want to obtain also the recalibrated data the model must be initalize the recalibrated predictions with \code{\link[=calculate_predictions_recalibrated_type_1]{calculate_predictions_recalibrated_type_1()}} and \code{\link[=calculate_predictions_recalibrated_type_2]{calculate_predictions_recalibrated_type_2()}}.}

\item{data}{Data for what the observed predictions will be calculated.}

\item{n_groups}{Number of groups that must be calculated.}

\item{type}{Type of the predictions that the calibration plot data should be generated from: \code{"predictions_aggregated"}, \code{"predictions_recal_type_1"} or \code{"predictions_recal_type_2"}}
}
\value{
\code{tibble} with the data ready to generate a calibration plot.\tabular{lcc}{
   group \tab prediction \tab observed \cr
   1 \tab 0.03 \tab 0.05 \cr
   ... \tab ... \tab ... \cr
   n_group \tab 0.84 \tab 0.79 \cr
}
}
\description{
Generates the data needed for the calibration plot. The calibration plot needs to separate the model predictions by risk groups. First the function separates the predictions in \code{n_groups} then computes the mean value of the model predictions and also the observed value. The observed value is the estimated value at the study time estimated using a Kaplan-Meier estimator.
}
\examples{
\dontrun{
model |>
  get_calibration_plot_data_surv(data = test_data, n_groups = 10, type = "predictions_aggregated")
}
}
