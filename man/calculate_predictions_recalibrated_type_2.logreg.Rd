% Generated by roxygen2: do not edit by hand
% Please edit documentation in
%   R/calculate_predictions_recalibrated_type_2.logreg.R
\name{calculate_predictions_recalibrated_type_2.logreg}
\alias{calculate_predictions_recalibrated_type_2.logreg}
\title{Calculates the type 2 recalibrated predictions for a logistic regression model}
\usage{
\method{calculate_predictions_recalibrated_type_2}{logreg}(model, data, .progress = FALSE)
}
\arguments{
\item{model}{Model generated with \code{\link[=mv_model_logreg]{mv_model_logreg()}}. Needs the \code{predictions} parameter of the model, to generate it the function \code{\link[=calculate_predictions]{calculate_predictions()}} must be executed over the model.}

\item{data}{Data for what the predictions must be recalibrated.}

\item{.progress}{\code{TRUE} to render the progress bar \code{FALSE} otherwise.}
}
\value{
A model with the parameter \code{predictons_recalibrated_type_2}, \code{S0_type_2} and \code{beta_overall} populated.
\itemize{
\item \code{predictions_recal_type_2}: stores the type 2 recalibrated predictions as follows.\tabular{lc}{
   id \tab prediction_type_2 \cr
   1 \tab 0.03 \cr
   ... \tab ... \cr
   n \tab 0.16 \cr
}

\item \code{alpha_type_2}: stores the \eqn{\alpha} type 2 recalibration parameter.
\item \code{beta_overall}: stores the \eqn{\beta_{overall}} type 2 recalibration parameter.
}
}
\description{
Calculates the type 2 recalibrated predictions for a logistic regression model. The type 2 recalibration uses two parameters to update the model predictions, the \eqn{\alpha} parameter allow to update the model \code{intercept} and the \eqn{\beta_{overall}} parameter allow to update the importance of the log-odds (\eqn{\beta \cdot X}) values. The log-odds function can be rewritten as

\deqn{log(\frac{p}{1 - p}) = \alpha + \beta_{overall} \cdot (\beta_0 + \beta_1 \cdot X_1 + \beta_2 \cdot X_2 + \dots + \beta_p \cdot X_p)}

The parameters are estimated deriving a logistic regression model in each of the imputations using the model log-odds as only covariate. The coefficients of the model represent the parameter estimations and they are aggregated using the rubin rules. Then, the recalibrated predictions are calculated using these parameters and the aggregated log-odds.

\deqn{\frac{1}{1 + e^{(-(\alpha + \beta_{overall}(\beta \cdot X)))}}}
}
\examples{
set.seed(123)

model <- mv_model_logreg(
  coefficients = list(x = 0.5, z = 0.3),
  formula = event ~ x + z,
  intercept = 1.2
)

data <- data.frame(
  .imp = c(1, 1, 1, 2, 2, 2, 3, 3, 3),
  id = c(1, 2, 3, 1, 2, 3, 1, 2, 3),
  x = rnorm(9, 1, 0.25),
  z = rnorm(9, 2, 0.75),
  status = c(1, 0, 0, 1, 0, 0, 1, 0, 0),
  time = c(2, 3, 5, 2, 3, 5, 2, 3, 5)
)
data$event <- survival::Surv(data$time, data$status)

model |>
  calculate_predictions(data) |>
  calculate_predictions_recalibrated_type_1(data) |>
  calculate_predictions_recalibrated_type_2(data)
}
